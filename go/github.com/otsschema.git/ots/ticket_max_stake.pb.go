// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: ots/ticket_max_stake.proto

package ots

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TicketMaxStakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TicketMaxStakeRequest) Reset() {
	*x = TicketMaxStakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_max_stake_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketMaxStakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketMaxStakeRequest) ProtoMessage() {}

func (x *TicketMaxStakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_max_stake_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketMaxStakeRequest.ProtoReflect.Descriptor instead.
func (*TicketMaxStakeRequest) Descriptor() ([]byte, []int) {
	return file_ots_ticket_max_stake_proto_rawDescGZIP(), []int{0}
}

func (x *TicketMaxStakeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TicketMaxStakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stake     uint64               `protobuf:"varint,1,opt,name=stake,proto3" json:"stake,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TicketMaxStakeResponse) Reset() {
	*x = TicketMaxStakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_max_stake_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketMaxStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketMaxStakeResponse) ProtoMessage() {}

func (x *TicketMaxStakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_max_stake_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketMaxStakeResponse.ProtoReflect.Descriptor instead.
func (*TicketMaxStakeResponse) Descriptor() ([]byte, []int) {
	return file_ots_ticket_max_stake_proto_rawDescGZIP(), []int{1}
}

func (x *TicketMaxStakeResponse) GetStake() uint64 {
	if x != nil {
		return x.Stake
	}
	return 0
}

func (x *TicketMaxStakeResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_ots_ticket_max_stake_proto protoreflect.FileDescriptor

var file_ots_ticket_max_stake_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x74, 0x73, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6f, 0x74,
	0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x16, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x2d, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x64, 0x64,
	0x69, 0x6e, 0x2e, 0x6f, 0x74, 0x73, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x74, 0x73, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x2f, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ots_ticket_max_stake_proto_rawDescOnce sync.Once
	file_ots_ticket_max_stake_proto_rawDescData = file_ots_ticket_max_stake_proto_rawDesc
)

func file_ots_ticket_max_stake_proto_rawDescGZIP() []byte {
	file_ots_ticket_max_stake_proto_rawDescOnce.Do(func() {
		file_ots_ticket_max_stake_proto_rawDescData = protoimpl.X.CompressGZIP(file_ots_ticket_max_stake_proto_rawDescData)
	})
	return file_ots_ticket_max_stake_proto_rawDescData
}

var file_ots_ticket_max_stake_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ots_ticket_max_stake_proto_goTypes = []interface{}{
	(*TicketMaxStakeRequest)(nil),  // 0: ots.TicketMaxStakeRequest
	(*TicketMaxStakeResponse)(nil), // 1: ots.TicketMaxStakeResponse
	(*timestamp.Timestamp)(nil),    // 2: google.protobuf.Timestamp
}
var file_ots_ticket_max_stake_proto_depIdxs = []int32{
	2, // 0: ots.TicketMaxStakeResponse.timestamp:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ots_ticket_max_stake_proto_init() }
func file_ots_ticket_max_stake_proto_init() {
	if File_ots_ticket_max_stake_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ots_ticket_max_stake_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketMaxStakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_max_stake_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketMaxStakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ots_ticket_max_stake_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ots_ticket_max_stake_proto_goTypes,
		DependencyIndexes: file_ots_ticket_max_stake_proto_depIdxs,
		MessageInfos:      file_ots_ticket_max_stake_proto_msgTypes,
	}.Build()
	File_ots_ticket_max_stake_proto = out.File
	file_ots_ticket_max_stake_proto_rawDesc = nil
	file_ots_ticket_max_stake_proto_goTypes = nil
	file_ots_ticket_max_stake_proto_depIdxs = nil
}
