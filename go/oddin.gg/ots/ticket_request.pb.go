// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: ots/ticket_request.proto

package ots

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bets             []*Bet                 `protobuf:"bytes,3,rep,name=bets,proto3" json:"bets,omitempty"`
	AcceptOddsChange AcceptOddsChange       `protobuf:"varint,4,opt,name=accept_odds_change,json=acceptOddsChange,proto3,enum=ots.enums.AcceptOddsChange" json:"accept_odds_change,omitempty"`
	// Total number of combinations to validate against generated combinations
	TotalCombinations *wrapperspb.UInt32Value     `protobuf:"bytes,5,opt,name=total_combinations,json=totalCombinations,proto3" json:"total_combinations,omitempty"`
	BetInfo           *TicketRequestBetInfo       `protobuf:"bytes,6,opt,name=bet_info,json=betInfo,proto3" json:"bet_info,omitempty"`
	ReofferId         *wrapperspb.StringValue     `protobuf:"bytes,8,opt,name=reoffer_id,json=reofferId,proto3" json:"reoffer_id,omitempty"`
	Selections        map[string]*TicketSelection `protobuf:"bytes,9,rep,name=selections,proto3" json:"selections,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TicketRequest) Reset() {
	*x = TicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest) ProtoMessage() {}

func (x *TicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest.ProtoReflect.Descriptor instead.
func (*TicketRequest) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{0}
}

func (x *TicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TicketRequest) GetBets() []*Bet {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *TicketRequest) GetAcceptOddsChange() AcceptOddsChange {
	if x != nil {
		return x.AcceptOddsChange
	}
	return AcceptOddsChange_NONE
}

func (x *TicketRequest) GetTotalCombinations() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalCombinations
	}
	return nil
}

func (x *TicketRequest) GetBetInfo() *TicketRequestBetInfo {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

func (x *TicketRequest) GetReofferId() *wrapperspb.StringValue {
	if x != nil {
		return x.ReofferId
	}
	return nil
}

func (x *TicketRequest) GetSelections() map[string]*TicketSelection {
	if x != nil {
		return x.Selections
	}
	return nil
}

type Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bonus      *BetBonus               `protobuf:"bytes,2,opt,name=bonus,proto3" json:"bonus,omitempty"`
	Stake      *BetStake               `protobuf:"bytes,3,opt,name=stake,proto3" json:"stake,omitempty"`
	ReofferId  *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=reoffer_id,json=reofferId,proto3" json:"reoffer_id,omitempty"`
	TotalWins  *wrapperspb.UInt64Value `protobuf:"bytes,5,opt,name=total_wins,json=totalWins,proto3" json:"total_wins,omitempty"`
	Systems    []uint32                `protobuf:"varint,6,rep,packed,name=systems,proto3" json:"systems,omitempty"`
	Selections []*BetSelection         `protobuf:"bytes,7,rep,name=selections,proto3" json:"selections,omitempty"`
}

func (x *Bet) Reset() {
	*x = Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bet) ProtoMessage() {}

func (x *Bet) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bet.ProtoReflect.Descriptor instead.
func (*Bet) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{1}
}

func (x *Bet) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Bet) GetBonus() *BetBonus {
	if x != nil {
		return x.Bonus
	}
	return nil
}

func (x *Bet) GetStake() *BetStake {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *Bet) GetReofferId() *wrapperspb.StringValue {
	if x != nil {
		return x.ReofferId
	}
	return nil
}

func (x *Bet) GetTotalWins() *wrapperspb.UInt64Value {
	if x != nil {
		return x.TotalWins
	}
	return nil
}

func (x *Bet) GetSystems() []uint32 {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *Bet) GetSelections() []*BetSelection {
	if x != nil {
		return x.Selections
	}
	return nil
}

type TicketSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Odds uint64 `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`
}

func (x *TicketSelection) Reset() {
	*x = TicketSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketSelection) ProtoMessage() {}

func (x *TicketSelection) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketSelection.ProtoReflect.Descriptor instead.
func (*TicketSelection) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{2}
}

func (x *TicketSelection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketSelection) GetOdds() uint64 {
	if x != nil {
		return x.Odds
	}
	return 0
}

type BetSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BetSelection) Reset() {
	*x = BetSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetSelection) ProtoMessage() {}

func (x *BetSelection) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetSelection.ProtoReflect.Descriptor instead.
func (*BetSelection) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{3}
}

func (x *BetSelection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BetStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64       `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Type  BetStakeType `protobuf:"varint,2,opt,name=type,proto3,enum=ots.enums.BetStakeType" json:"type,omitempty"`
}

func (x *BetStake) Reset() {
	*x = BetStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetStake) ProtoMessage() {}

func (x *BetStake) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetStake.ProtoReflect.Descriptor instead.
func (*BetStake) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{4}
}

func (x *BetStake) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BetStake) GetType() BetStakeType {
	if x != nil {
		return x.Type
	}
	return BetStakeType_SUM
}

type BetBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64       `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Type  BetBonusType `protobuf:"varint,2,opt,name=type,proto3,enum=ots.enums.BetBonusType" json:"type,omitempty"`
	Mode  BetBonusMode `protobuf:"varint,3,opt,name=mode,proto3,enum=ots.enums.BetBonusMode" json:"mode,omitempty"`
}

func (x *BetBonus) Reset() {
	*x = BetBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetBonus) ProtoMessage() {}

func (x *BetBonus) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetBonus.ProtoReflect.Descriptor instead.
func (*BetBonus) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{5}
}

func (x *BetBonus) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BetBonus) GetType() BetBonusType {
	if x != nil {
		return x.Type
	}
	return BetBonusType_TOTAL
}

func (x *BetBonus) GetMode() BetBonusMode {
	if x != nil {
		return x.Mode
	}
	return BetBonusMode_ALL
}

type TicketRequestBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of terminal or shop, where bet is received
	LocationId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	BetChannel BetChannel              `protobuf:"varint,2,opt,name=bet_channel,json=betChannel,proto3,enum=ots.enums.BetChannel" json:"bet_channel,omitempty"`
	Currency   string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Customer   *BetCustomer            `protobuf:"bytes,4,opt,name=customer,proto3" json:"customer,omitempty"`
}

func (x *TicketRequestBetInfo) Reset() {
	*x = TicketRequestBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRequestBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequestBetInfo) ProtoMessage() {}

func (x *TicketRequestBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequestBetInfo.ProtoReflect.Descriptor instead.
func (*TicketRequestBetInfo) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{6}
}

func (x *TicketRequestBetInfo) GetLocationId() *wrapperspb.StringValue {
	if x != nil {
		return x.LocationId
	}
	return nil
}

func (x *TicketRequestBetInfo) GetBetChannel() BetChannel {
	if x != nil {
		return x.BetChannel
	}
	return BetChannel_NOT_SPECIFIED
}

func (x *TicketRequestBetInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TicketRequestBetInfo) GetCustomer() *BetCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

type BetCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	DeviceId *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Language string                  `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *BetCustomer) Reset() {
	*x = BetCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ots_ticket_request_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetCustomer) ProtoMessage() {}

func (x *BetCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_ots_ticket_request_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetCustomer.ProtoReflect.Descriptor instead.
func (*BetCustomer) Descriptor() ([]byte, []int) {
	return file_ots_ticket_request_proto_rawDescGZIP(), []int{7}
}

func (x *BetCustomer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BetCustomer) GetIp() *wrapperspb.StringValue {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *BetCustomer) GetDeviceId() *wrapperspb.StringValue {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *BetCustomer) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

var File_ots_ticket_request_proto protoreflect.FileDescriptor

var file_ots_ticket_request_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6f, 0x74, 0x73, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6f, 0x74, 0x73, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x6f, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x04, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x04, 0x62, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x52, 0x04, 0x62, 0x65, 0x74, 0x73,
	0x12, 0x49, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x6f, 0x64, 0x64, 0x73, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6f,
	0x74, 0x73, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f,
	0x64, 0x64, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x4f, 0x64, 0x64, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x74, 0x73,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b,
	0x0a, 0x0a, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x53, 0x0a, 0x0f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xc4, 0x02, 0x0a, 0x03, 0x42, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x74, 0x73, 0x2e,
	0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f,
	0x74, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6f, 0x64,
	0x64, 0x73, 0x22, 0x1e, 0x0a, 0x0c, 0x42, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4d, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x42,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x7a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x42, 0x65,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x6f, 0x74, 0x73, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xd7, 0x01,
	0x0a, 0x14, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x62, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x74, 0x73,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x42, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x0a, 0x62, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x74,
	0x73, 0x2e, 0x42, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x42, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x02, 0x69, 0x70, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x1d, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x64, 0x64, 0x69, 0x6e, 0x2e, 0x6f, 0x74, 0x73, 0x5a, 0x0c, 0x6f,
	0x64, 0x64, 0x69, 0x6e, 0x2e, 0x67, 0x67, 0x2f, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ots_ticket_request_proto_rawDescOnce sync.Once
	file_ots_ticket_request_proto_rawDescData = file_ots_ticket_request_proto_rawDesc
)

func file_ots_ticket_request_proto_rawDescGZIP() []byte {
	file_ots_ticket_request_proto_rawDescOnce.Do(func() {
		file_ots_ticket_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_ots_ticket_request_proto_rawDescData)
	})
	return file_ots_ticket_request_proto_rawDescData
}

var file_ots_ticket_request_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ots_ticket_request_proto_goTypes = []interface{}{
	(*TicketRequest)(nil),          // 0: ots.TicketRequest
	(*Bet)(nil),                    // 1: ots.Bet
	(*TicketSelection)(nil),        // 2: ots.TicketSelection
	(*BetSelection)(nil),           // 3: ots.BetSelection
	(*BetStake)(nil),               // 4: ots.BetStake
	(*BetBonus)(nil),               // 5: ots.BetBonus
	(*TicketRequestBetInfo)(nil),   // 6: ots.TicketRequestBetInfo
	(*BetCustomer)(nil),            // 7: ots.BetCustomer
	nil,                            // 8: ots.TicketRequest.SelectionsEntry
	(*timestamppb.Timestamp)(nil),  // 9: google.protobuf.Timestamp
	(AcceptOddsChange)(0),          // 10: ots.enums.AcceptOddsChange
	(*wrapperspb.UInt32Value)(nil), // 11: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil), // 12: google.protobuf.StringValue
	(*wrapperspb.UInt64Value)(nil), // 13: google.protobuf.UInt64Value
	(BetStakeType)(0),              // 14: ots.enums.BetStakeType
	(BetBonusType)(0),              // 15: ots.enums.BetBonusType
	(BetBonusMode)(0),              // 16: ots.enums.BetBonusMode
	(BetChannel)(0),                // 17: ots.enums.BetChannel
}
var file_ots_ticket_request_proto_depIdxs = []int32{
	9,  // 0: ots.TicketRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 1: ots.TicketRequest.bets:type_name -> ots.Bet
	10, // 2: ots.TicketRequest.accept_odds_change:type_name -> ots.enums.AcceptOddsChange
	11, // 3: ots.TicketRequest.total_combinations:type_name -> google.protobuf.UInt32Value
	6,  // 4: ots.TicketRequest.bet_info:type_name -> ots.TicketRequestBetInfo
	12, // 5: ots.TicketRequest.reoffer_id:type_name -> google.protobuf.StringValue
	8,  // 6: ots.TicketRequest.selections:type_name -> ots.TicketRequest.SelectionsEntry
	12, // 7: ots.Bet.id:type_name -> google.protobuf.StringValue
	5,  // 8: ots.Bet.bonus:type_name -> ots.BetBonus
	4,  // 9: ots.Bet.stake:type_name -> ots.BetStake
	12, // 10: ots.Bet.reoffer_id:type_name -> google.protobuf.StringValue
	13, // 11: ots.Bet.total_wins:type_name -> google.protobuf.UInt64Value
	3,  // 12: ots.Bet.selections:type_name -> ots.BetSelection
	14, // 13: ots.BetStake.type:type_name -> ots.enums.BetStakeType
	15, // 14: ots.BetBonus.type:type_name -> ots.enums.BetBonusType
	16, // 15: ots.BetBonus.mode:type_name -> ots.enums.BetBonusMode
	12, // 16: ots.TicketRequestBetInfo.location_id:type_name -> google.protobuf.StringValue
	17, // 17: ots.TicketRequestBetInfo.bet_channel:type_name -> ots.enums.BetChannel
	7,  // 18: ots.TicketRequestBetInfo.customer:type_name -> ots.BetCustomer
	12, // 19: ots.BetCustomer.ip:type_name -> google.protobuf.StringValue
	12, // 20: ots.BetCustomer.device_id:type_name -> google.protobuf.StringValue
	2,  // 21: ots.TicketRequest.SelectionsEntry.value:type_name -> ots.TicketSelection
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_ots_ticket_request_proto_init() }
func file_ots_ticket_request_proto_init() {
	if File_ots_ticket_request_proto != nil {
		return
	}
	file_ots_enum_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ots_ticket_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRequestBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ots_ticket_request_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ots_ticket_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ots_ticket_request_proto_goTypes,
		DependencyIndexes: file_ots_ticket_request_proto_depIdxs,
		MessageInfos:      file_ots_ticket_request_proto_msgTypes,
	}.Build()
	File_ots_ticket_request_proto = out.File
	file_ots_ticket_request_proto_rawDesc = nil
	file_ots_ticket_request_proto_goTypes = nil
	file_ots_ticket_request_proto_depIdxs = nil
}
