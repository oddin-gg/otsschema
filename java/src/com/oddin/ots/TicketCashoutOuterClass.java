// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ots/ticket_cashout.proto

package com.oddin.ots;

public final class TicketCashoutOuterClass {
  private TicketCashoutOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TicketCashoutRejectReasonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ots.TicketCashoutRejectReason)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Reason code.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    int getCodeValue();
    /**
     * <pre>
     * Reason code.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
     * @return The code.
     */
    com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code getCode();

    /**
     * <pre>
     * Message describing a reason.
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * Message describing a reason.
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code ots.TicketCashoutRejectReason}
   */
  public static final class TicketCashoutRejectReason extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ots.TicketCashoutRejectReason)
      TicketCashoutRejectReasonOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TicketCashoutRejectReason.newBuilder() to construct.
    private TicketCashoutRejectReason(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TicketCashoutRejectReason() {
      code_ = 0;
      message_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TicketCashoutRejectReason();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutRejectReason_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutRejectReason_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.class, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder.class);
    }

    /**
     * Protobuf enum {@code ots.TicketCashoutRejectReason.Code}
     */
    public enum Code
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Not a valid value. Used for blocking 0 as invalid state.
       * </pre>
       *
       * <code>CODE_UNSPECIFIED = 0;</code>
       */
      CODE_UNSPECIFIED(0),
      /**
       * <pre>
       * We are having internal problems.
       * </pre>
       *
       * <code>CODE_INTERNAL = 1;</code>
       */
      CODE_INTERNAL(1),
      /**
       * <pre>
       * Ticket cashout is not valid.
       * </pre>
       *
       * <code>CODE_INVALID_ARGUMENT = 2;</code>
       */
      CODE_INVALID_ARGUMENT(2),
      /**
       * <pre>
       * Ticket not found.
       * </pre>
       *
       * <code>CODE_NOT_FOUND = 3;</code>
       */
      CODE_NOT_FOUND(3),
      /**
       * <pre>
       * Ticket is not in accepted state.
       * </pre>
       *
       * <code>CODE_WRONG_TICKET_STAKE = 4;</code>
       */
      CODE_WRONG_TICKET_STAKE(4),
      /**
       * <pre>
       * Cashout amount is higher than possible payout.
       * </pre>
       *
       * <code>CODE_MAX_PAYOUT_BREACHED = 5;</code>
       */
      CODE_MAX_PAYOUT_BREACHED(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Not a valid value. Used for blocking 0 as invalid state.
       * </pre>
       *
       * <code>CODE_UNSPECIFIED = 0;</code>
       */
      public static final int CODE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * We are having internal problems.
       * </pre>
       *
       * <code>CODE_INTERNAL = 1;</code>
       */
      public static final int CODE_INTERNAL_VALUE = 1;
      /**
       * <pre>
       * Ticket cashout is not valid.
       * </pre>
       *
       * <code>CODE_INVALID_ARGUMENT = 2;</code>
       */
      public static final int CODE_INVALID_ARGUMENT_VALUE = 2;
      /**
       * <pre>
       * Ticket not found.
       * </pre>
       *
       * <code>CODE_NOT_FOUND = 3;</code>
       */
      public static final int CODE_NOT_FOUND_VALUE = 3;
      /**
       * <pre>
       * Ticket is not in accepted state.
       * </pre>
       *
       * <code>CODE_WRONG_TICKET_STAKE = 4;</code>
       */
      public static final int CODE_WRONG_TICKET_STAKE_VALUE = 4;
      /**
       * <pre>
       * Cashout amount is higher than possible payout.
       * </pre>
       *
       * <code>CODE_MAX_PAYOUT_BREACHED = 5;</code>
       */
      public static final int CODE_MAX_PAYOUT_BREACHED_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Code valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Code forNumber(int value) {
        switch (value) {
          case 0: return CODE_UNSPECIFIED;
          case 1: return CODE_INTERNAL;
          case 2: return CODE_INVALID_ARGUMENT;
          case 3: return CODE_NOT_FOUND;
          case 4: return CODE_WRONG_TICKET_STAKE;
          case 5: return CODE_MAX_PAYOUT_BREACHED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Code>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Code> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Code>() {
              public Code findValueByNumber(int number) {
                return Code.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDescriptor().getEnumTypes().get(0);
      }

      private static final Code[] VALUES = values();

      public static Code valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Code(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ots.TicketCashoutRejectReason.Code)
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_ = 0;
    /**
     * <pre>
     * Reason code.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override public int getCodeValue() {
      return code_;
    }
    /**
     * <pre>
     * Reason code.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
     * @return The code.
     */
    @java.lang.Override public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code getCode() {
      com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code result = com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code.forNumber(code_);
      return result == null ? com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";
    /**
     * <pre>
     * Message describing a reason.
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Message describing a reason.
     * </pre>
     *
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code.CODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code.CODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason)) {
        return super.equals(obj);
      }
      com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason other = (com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason) obj;

      if (code_ != other.code_) return false;
      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ots.TicketCashoutRejectReason}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ots.TicketCashoutRejectReason)
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutRejectReason_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutRejectReason_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.class, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder.class);
      }

      // Construct using com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        code_ = 0;
        message_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutRejectReason_descriptor;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason getDefaultInstanceForType() {
        return com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance();
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason build() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason buildPartial() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason result = new com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.code_ = code_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.message_ = message_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason) {
          return mergeFrom((com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason other) {
        if (other == com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                code_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                message_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int code_ = 0;
      /**
       * <pre>
       * Reason code.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
       * @return The enum numeric value on the wire for code.
       */
      @java.lang.Override public int getCodeValue() {
        return code_;
      }
      /**
       * <pre>
       * Reason code.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
       * @param value The enum numeric value on the wire for code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeValue(int value) {
        code_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reason code.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code getCode() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code result = com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code.forNumber(code_);
        return result == null ? com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Reason code.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Code value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reason code.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason.Code code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * Message describing a reason.
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Message describing a reason.
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Message describing a reason.
       * </pre>
       *
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Message describing a reason.
       * </pre>
       *
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Message describing a reason.
       * </pre>
       *
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        message_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ots.TicketCashoutRejectReason)
    }

    // @@protoc_insertion_point(class_scope:ots.TicketCashoutRejectReason)
    private static final com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason();
    }

    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TicketCashoutRejectReason>
        PARSER = new com.google.protobuf.AbstractParser<TicketCashoutRejectReason>() {
      @java.lang.Override
      public TicketCashoutRejectReason parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TicketCashoutRejectReason> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TicketCashoutRejectReason> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TicketCashoutStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ots.TicketCashoutState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Acceptance status - PENDING | REJECTED | ACCEPTED.
     * </pre>
     *
     * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
     * @return The enum numeric value on the wire for ticketStatus.
     */
    int getTicketStatusValue();
    /**
     * <pre>
     * Acceptance status - PENDING | REJECTED | ACCEPTED.
     * </pre>
     *
     * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
     * @return The ticketStatus.
     */
    com.oddin.ots.Enums.AcceptanceStatus getTicketStatus();

    /**
     * <pre>
     * Information about rejection reason.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
     * @return Whether the rejectReason field is set.
     */
    boolean hasRejectReason();
    /**
     * <pre>
     * Information about rejection reason.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
     * @return The rejectReason.
     */
    com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason getRejectReason();
    /**
     * <pre>
     * Information about rejection reason.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
     */
    com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder getRejectReasonOrBuilder();
  }
  /**
   * Protobuf type {@code ots.TicketCashoutState}
   */
  public static final class TicketCashoutState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ots.TicketCashoutState)
      TicketCashoutStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TicketCashoutState.newBuilder() to construct.
    private TicketCashoutState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TicketCashoutState() {
      id_ = "";
      ticketStatus_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TicketCashoutState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.class, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICKET_STATUS_FIELD_NUMBER = 2;
    private int ticketStatus_ = 0;
    /**
     * <pre>
     * Acceptance status - PENDING | REJECTED | ACCEPTED.
     * </pre>
     *
     * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
     * @return The enum numeric value on the wire for ticketStatus.
     */
    @java.lang.Override public int getTicketStatusValue() {
      return ticketStatus_;
    }
    /**
     * <pre>
     * Acceptance status - PENDING | REJECTED | ACCEPTED.
     * </pre>
     *
     * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
     * @return The ticketStatus.
     */
    @java.lang.Override public com.oddin.ots.Enums.AcceptanceStatus getTicketStatus() {
      com.oddin.ots.Enums.AcceptanceStatus result = com.oddin.ots.Enums.AcceptanceStatus.forNumber(ticketStatus_);
      return result == null ? com.oddin.ots.Enums.AcceptanceStatus.UNRECOGNIZED : result;
    }

    public static final int REJECT_REASON_FIELD_NUMBER = 3;
    private com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason rejectReason_;
    /**
     * <pre>
     * Information about rejection reason.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
     * @return Whether the rejectReason field is set.
     */
    @java.lang.Override
    public boolean hasRejectReason() {
      return rejectReason_ != null;
    }
    /**
     * <pre>
     * Information about rejection reason.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
     * @return The rejectReason.
     */
    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason getRejectReason() {
      return rejectReason_ == null ? com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance() : rejectReason_;
    }
    /**
     * <pre>
     * Information about rejection reason.
     * </pre>
     *
     * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
     */
    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder getRejectReasonOrBuilder() {
      return rejectReason_ == null ? com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance() : rejectReason_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (ticketStatus_ != com.oddin.ots.Enums.AcceptanceStatus.ACCEPTANCE_STATUS_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, ticketStatus_);
      }
      if (rejectReason_ != null) {
        output.writeMessage(3, getRejectReason());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (ticketStatus_ != com.oddin.ots.Enums.AcceptanceStatus.ACCEPTANCE_STATUS_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ticketStatus_);
      }
      if (rejectReason_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRejectReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState)) {
        return super.equals(obj);
      }
      com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState other = (com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (ticketStatus_ != other.ticketStatus_) return false;
      if (hasRejectReason() != other.hasRejectReason()) return false;
      if (hasRejectReason()) {
        if (!getRejectReason()
            .equals(other.getRejectReason())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TICKET_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + ticketStatus_;
      if (hasRejectReason()) {
        hash = (37 * hash) + REJECT_REASON_FIELD_NUMBER;
        hash = (53 * hash) + getRejectReason().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ots.TicketCashoutState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ots.TicketCashoutState)
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.class, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.Builder.class);
      }

      // Construct using com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        ticketStatus_ = 0;
        rejectReason_ = null;
        if (rejectReasonBuilder_ != null) {
          rejectReasonBuilder_.dispose();
          rejectReasonBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashoutState_descriptor;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState getDefaultInstanceForType() {
        return com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.getDefaultInstance();
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState build() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState buildPartial() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState result = new com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ticketStatus_ = ticketStatus_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rejectReason_ = rejectReasonBuilder_ == null
              ? rejectReason_
              : rejectReasonBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState) {
          return mergeFrom((com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState other) {
        if (other == com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.ticketStatus_ != 0) {
          setTicketStatusValue(other.getTicketStatusValue());
        }
        if (other.hasRejectReason()) {
          mergeRejectReason(other.getRejectReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                ticketStatus_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getRejectReasonFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int ticketStatus_ = 0;
      /**
       * <pre>
       * Acceptance status - PENDING | REJECTED | ACCEPTED.
       * </pre>
       *
       * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
       * @return The enum numeric value on the wire for ticketStatus.
       */
      @java.lang.Override public int getTicketStatusValue() {
        return ticketStatus_;
      }
      /**
       * <pre>
       * Acceptance status - PENDING | REJECTED | ACCEPTED.
       * </pre>
       *
       * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
       * @param value The enum numeric value on the wire for ticketStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTicketStatusValue(int value) {
        ticketStatus_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Acceptance status - PENDING | REJECTED | ACCEPTED.
       * </pre>
       *
       * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
       * @return The ticketStatus.
       */
      @java.lang.Override
      public com.oddin.ots.Enums.AcceptanceStatus getTicketStatus() {
        com.oddin.ots.Enums.AcceptanceStatus result = com.oddin.ots.Enums.AcceptanceStatus.forNumber(ticketStatus_);
        return result == null ? com.oddin.ots.Enums.AcceptanceStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Acceptance status - PENDING | REJECTED | ACCEPTED.
       * </pre>
       *
       * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
       * @param value The ticketStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTicketStatus(com.oddin.ots.Enums.AcceptanceStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        ticketStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Acceptance status - PENDING | REJECTED | ACCEPTED.
       * </pre>
       *
       * <code>.ots.enums.AcceptanceStatus ticket_status = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTicketStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ticketStatus_ = 0;
        onChanged();
        return this;
      }

      private com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason rejectReason_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder> rejectReasonBuilder_;
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       * @return Whether the rejectReason field is set.
       */
      public boolean hasRejectReason() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       * @return The rejectReason.
       */
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason getRejectReason() {
        if (rejectReasonBuilder_ == null) {
          return rejectReason_ == null ? com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance() : rejectReason_;
        } else {
          return rejectReasonBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      public Builder setRejectReason(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason value) {
        if (rejectReasonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rejectReason_ = value;
        } else {
          rejectReasonBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      public Builder setRejectReason(
          com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder builderForValue) {
        if (rejectReasonBuilder_ == null) {
          rejectReason_ = builderForValue.build();
        } else {
          rejectReasonBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      public Builder mergeRejectReason(com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason value) {
        if (rejectReasonBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            rejectReason_ != null &&
            rejectReason_ != com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance()) {
            getRejectReasonBuilder().mergeFrom(value);
          } else {
            rejectReason_ = value;
          }
        } else {
          rejectReasonBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      public Builder clearRejectReason() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rejectReason_ = null;
        if (rejectReasonBuilder_ != null) {
          rejectReasonBuilder_.dispose();
          rejectReasonBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder getRejectReasonBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRejectReasonFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder getRejectReasonOrBuilder() {
        if (rejectReasonBuilder_ != null) {
          return rejectReasonBuilder_.getMessageOrBuilder();
        } else {
          return rejectReason_ == null ?
              com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.getDefaultInstance() : rejectReason_;
        }
      }
      /**
       * <pre>
       * Information about rejection reason.
       * </pre>
       *
       * <code>.ots.TicketCashoutRejectReason reject_reason = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder> 
          getRejectReasonFieldBuilder() {
        if (rejectReasonBuilder_ == null) {
          rejectReasonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReason.Builder, com.oddin.ots.TicketCashoutOuterClass.TicketCashoutRejectReasonOrBuilder>(
                  getRejectReason(),
                  getParentForChildren(),
                  isClean());
          rejectReason_ = null;
        }
        return rejectReasonBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ots.TicketCashoutState)
    }

    // @@protoc_insertion_point(class_scope:ots.TicketCashoutState)
    private static final com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState();
    }

    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TicketCashoutState>
        PARSER = new com.google.protobuf.AbstractParser<TicketCashoutState>() {
      @java.lang.Override
      public TicketCashoutState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TicketCashoutState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TicketCashoutState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.TicketCashoutState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BetCashoutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ots.BetCashout)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Bet id.
     * </pre>
     *
     * <code>.google.protobuf.StringValue id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Bet id.
     * </pre>
     *
     * <code>.google.protobuf.StringValue id = 1;</code>
     * @return The id.
     */
    com.google.protobuf.StringValue getId();
    /**
     * <pre>
     * Bet id.
     * </pre>
     *
     * <code>.google.protobuf.StringValue id = 1;</code>
     */
    com.google.protobuf.StringValueOrBuilder getIdOrBuilder();

    /**
     * <pre>
     * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
     * @return Whether the cashoutStake field is set.
     */
    boolean hasCashoutStake();
    /**
     * <pre>
     * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
     * @return The cashoutStake.
     */
    com.google.protobuf.UInt64Value getCashoutStake();
    /**
     * <pre>
     * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
     */
    com.google.protobuf.UInt64ValueOrBuilder getCashoutStakeOrBuilder();

    /**
     * <pre>
     * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
     * @return Whether the cashoutPercent field is set.
     */
    boolean hasCashoutPercent();
    /**
     * <pre>
     * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
     * @return The cashoutPercent.
     */
    com.google.protobuf.UInt64Value getCashoutPercent();
    /**
     * <pre>
     * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
     */
    com.google.protobuf.UInt64ValueOrBuilder getCashoutPercentOrBuilder();
  }
  /**
   * Protobuf type {@code ots.BetCashout}
   */
  public static final class BetCashout extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ots.BetCashout)
      BetCashoutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BetCashout.newBuilder() to construct.
    private BetCashout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BetCashout() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BetCashout();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_BetCashout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_BetCashout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oddin.ots.TicketCashoutOuterClass.BetCashout.class, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.StringValue id_;
    /**
     * <pre>
     * Bet id.
     * </pre>
     *
     * <code>.google.protobuf.StringValue id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <pre>
     * Bet id.
     * </pre>
     *
     * <code>.google.protobuf.StringValue id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public com.google.protobuf.StringValue getId() {
      return id_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : id_;
    }
    /**
     * <pre>
     * Bet id.
     * </pre>
     *
     * <code>.google.protobuf.StringValue id = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.StringValueOrBuilder getIdOrBuilder() {
      return id_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : id_;
    }

    public static final int CASHOUT_STAKE_FIELD_NUMBER = 2;
    private com.google.protobuf.UInt64Value cashoutStake_;
    /**
     * <pre>
     * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
     * @return Whether the cashoutStake field is set.
     */
    @java.lang.Override
    public boolean hasCashoutStake() {
      return cashoutStake_ != null;
    }
    /**
     * <pre>
     * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
     * @return The cashoutStake.
     */
    @java.lang.Override
    public com.google.protobuf.UInt64Value getCashoutStake() {
      return cashoutStake_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
    }
    /**
     * <pre>
     * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt64ValueOrBuilder getCashoutStakeOrBuilder() {
      return cashoutStake_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
    }

    public static final int CASHOUT_PERCENT_FIELD_NUMBER = 3;
    private com.google.protobuf.UInt64Value cashoutPercent_;
    /**
     * <pre>
     * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
     * @return Whether the cashoutPercent field is set.
     */
    @java.lang.Override
    public boolean hasCashoutPercent() {
      return cashoutPercent_ != null;
    }
    /**
     * <pre>
     * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
     * @return The cashoutPercent.
     */
    @java.lang.Override
    public com.google.protobuf.UInt64Value getCashoutPercent() {
      return cashoutPercent_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
    }
    /**
     * <pre>
     * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt64ValueOrBuilder getCashoutPercentOrBuilder() {
      return cashoutPercent_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != null) {
        output.writeMessage(1, getId());
      }
      if (cashoutStake_ != null) {
        output.writeMessage(2, getCashoutStake());
      }
      if (cashoutPercent_ != null) {
        output.writeMessage(3, getCashoutPercent());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (cashoutStake_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCashoutStake());
      }
      if (cashoutPercent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCashoutPercent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.oddin.ots.TicketCashoutOuterClass.BetCashout)) {
        return super.equals(obj);
      }
      com.oddin.ots.TicketCashoutOuterClass.BetCashout other = (com.oddin.ots.TicketCashoutOuterClass.BetCashout) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasCashoutStake() != other.hasCashoutStake()) return false;
      if (hasCashoutStake()) {
        if (!getCashoutStake()
            .equals(other.getCashoutStake())) return false;
      }
      if (hasCashoutPercent() != other.hasCashoutPercent()) return false;
      if (hasCashoutPercent()) {
        if (!getCashoutPercent()
            .equals(other.getCashoutPercent())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasCashoutStake()) {
        hash = (37 * hash) + CASHOUT_STAKE_FIELD_NUMBER;
        hash = (53 * hash) + getCashoutStake().hashCode();
      }
      if (hasCashoutPercent()) {
        hash = (37 * hash) + CASHOUT_PERCENT_FIELD_NUMBER;
        hash = (53 * hash) + getCashoutPercent().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.oddin.ots.TicketCashoutOuterClass.BetCashout prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ots.BetCashout}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ots.BetCashout)
        com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_BetCashout_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_BetCashout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.oddin.ots.TicketCashoutOuterClass.BetCashout.class, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder.class);
      }

      // Construct using com.oddin.ots.TicketCashoutOuterClass.BetCashout.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = null;
        if (idBuilder_ != null) {
          idBuilder_.dispose();
          idBuilder_ = null;
        }
        cashoutStake_ = null;
        if (cashoutStakeBuilder_ != null) {
          cashoutStakeBuilder_.dispose();
          cashoutStakeBuilder_ = null;
        }
        cashoutPercent_ = null;
        if (cashoutPercentBuilder_ != null) {
          cashoutPercentBuilder_.dispose();
          cashoutPercentBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_BetCashout_descriptor;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout getDefaultInstanceForType() {
        return com.oddin.ots.TicketCashoutOuterClass.BetCashout.getDefaultInstance();
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout build() {
        com.oddin.ots.TicketCashoutOuterClass.BetCashout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout buildPartial() {
        com.oddin.ots.TicketCashoutOuterClass.BetCashout result = new com.oddin.ots.TicketCashoutOuterClass.BetCashout(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.oddin.ots.TicketCashoutOuterClass.BetCashout result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = idBuilder_ == null
              ? id_
              : idBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.cashoutStake_ = cashoutStakeBuilder_ == null
              ? cashoutStake_
              : cashoutStakeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cashoutPercent_ = cashoutPercentBuilder_ == null
              ? cashoutPercent_
              : cashoutPercentBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.oddin.ots.TicketCashoutOuterClass.BetCashout) {
          return mergeFrom((com.oddin.ots.TicketCashoutOuterClass.BetCashout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.oddin.ots.TicketCashoutOuterClass.BetCashout other) {
        if (other == com.oddin.ots.TicketCashoutOuterClass.BetCashout.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasCashoutStake()) {
          mergeCashoutStake(other.getCashoutStake());
        }
        if (other.hasCashoutPercent()) {
          mergeCashoutPercent(other.getCashoutPercent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getIdFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getCashoutStakeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getCashoutPercentFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.StringValue id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> idBuilder_;
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       * @return The id.
       */
      public com.google.protobuf.StringValue getId() {
        if (idBuilder_ == null) {
          return id_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      public Builder setId(com.google.protobuf.StringValue value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      public Builder setId(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      public Builder mergeId(com.google.protobuf.StringValue value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            id_ != null &&
            id_ != com.google.protobuf.StringValue.getDefaultInstance()) {
            getIdBuilder().mergeFrom(value);
          } else {
            id_ = value;
          }
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = null;
        if (idBuilder_ != null) {
          idBuilder_.dispose();
          idBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      public com.google.protobuf.StringValue.Builder getIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : id_;
        }
      }
      /**
       * <pre>
       * Bet id.
       * </pre>
       *
       * <code>.google.protobuf.StringValue id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private com.google.protobuf.UInt64Value cashoutStake_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> cashoutStakeBuilder_;
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       * @return Whether the cashoutStake field is set.
       */
      public boolean hasCashoutStake() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       * @return The cashoutStake.
       */
      public com.google.protobuf.UInt64Value getCashoutStake() {
        if (cashoutStakeBuilder_ == null) {
          return cashoutStake_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
        } else {
          return cashoutStakeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      public Builder setCashoutStake(com.google.protobuf.UInt64Value value) {
        if (cashoutStakeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cashoutStake_ = value;
        } else {
          cashoutStakeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      public Builder setCashoutStake(
          com.google.protobuf.UInt64Value.Builder builderForValue) {
        if (cashoutStakeBuilder_ == null) {
          cashoutStake_ = builderForValue.build();
        } else {
          cashoutStakeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      public Builder mergeCashoutStake(com.google.protobuf.UInt64Value value) {
        if (cashoutStakeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            cashoutStake_ != null &&
            cashoutStake_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
            getCashoutStakeBuilder().mergeFrom(value);
          } else {
            cashoutStake_ = value;
          }
        } else {
          cashoutStakeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      public Builder clearCashoutStake() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cashoutStake_ = null;
        if (cashoutStakeBuilder_ != null) {
          cashoutStakeBuilder_.dispose();
          cashoutStakeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      public com.google.protobuf.UInt64Value.Builder getCashoutStakeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCashoutStakeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      public com.google.protobuf.UInt64ValueOrBuilder getCashoutStakeOrBuilder() {
        if (cashoutStakeBuilder_ != null) {
          return cashoutStakeBuilder_.getMessageOrBuilder();
        } else {
          return cashoutStake_ == null ?
              com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
        }
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
          getCashoutStakeFieldBuilder() {
        if (cashoutStakeBuilder_ == null) {
          cashoutStakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                  getCashoutStake(),
                  getParentForChildren(),
                  isClean());
          cashoutStake_ = null;
        }
        return cashoutStakeBuilder_;
      }

      private com.google.protobuf.UInt64Value cashoutPercent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> cashoutPercentBuilder_;
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       * @return Whether the cashoutPercent field is set.
       */
      public boolean hasCashoutPercent() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       * @return The cashoutPercent.
       */
      public com.google.protobuf.UInt64Value getCashoutPercent() {
        if (cashoutPercentBuilder_ == null) {
          return cashoutPercent_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
        } else {
          return cashoutPercentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      public Builder setCashoutPercent(com.google.protobuf.UInt64Value value) {
        if (cashoutPercentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cashoutPercent_ = value;
        } else {
          cashoutPercentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      public Builder setCashoutPercent(
          com.google.protobuf.UInt64Value.Builder builderForValue) {
        if (cashoutPercentBuilder_ == null) {
          cashoutPercent_ = builderForValue.build();
        } else {
          cashoutPercentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      public Builder mergeCashoutPercent(com.google.protobuf.UInt64Value value) {
        if (cashoutPercentBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            cashoutPercent_ != null &&
            cashoutPercent_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
            getCashoutPercentBuilder().mergeFrom(value);
          } else {
            cashoutPercent_ = value;
          }
        } else {
          cashoutPercentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      public Builder clearCashoutPercent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cashoutPercent_ = null;
        if (cashoutPercentBuilder_ != null) {
          cashoutPercentBuilder_.dispose();
          cashoutPercentBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      public com.google.protobuf.UInt64Value.Builder getCashoutPercentBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCashoutPercentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      public com.google.protobuf.UInt64ValueOrBuilder getCashoutPercentOrBuilder() {
        if (cashoutPercentBuilder_ != null) {
          return cashoutPercentBuilder_.getMessageOrBuilder();
        } else {
          return cashoutPercent_ == null ?
              com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
        }
      }
      /**
       * <pre>
       * Total cashout percent. Applicable bet. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
          getCashoutPercentFieldBuilder() {
        if (cashoutPercentBuilder_ == null) {
          cashoutPercentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                  getCashoutPercent(),
                  getParentForChildren(),
                  isClean());
          cashoutPercent_ = null;
        }
        return cashoutPercentBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ots.BetCashout)
    }

    // @@protoc_insertion_point(class_scope:ots.BetCashout)
    private static final com.oddin.ots.TicketCashoutOuterClass.BetCashout DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.oddin.ots.TicketCashoutOuterClass.BetCashout();
    }

    public static com.oddin.ots.TicketCashoutOuterClass.BetCashout getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BetCashout>
        PARSER = new com.google.protobuf.AbstractParser<BetCashout>() {
      @java.lang.Override
      public BetCashout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BetCashout> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BetCashout> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.BetCashout getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TicketCashoutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ots.TicketCashout)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Timestamp of request creation.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp of request creation.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return The timestamp.
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * Timestamp of request creation.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <pre>
     * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
     * @return Whether the cashoutStake field is set.
     */
    boolean hasCashoutStake();
    /**
     * <pre>
     * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
     * @return The cashoutStake.
     */
    com.google.protobuf.UInt64Value getCashoutStake();
    /**
     * <pre>
     * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
     */
    com.google.protobuf.UInt64ValueOrBuilder getCashoutStakeOrBuilder();

    /**
     * <pre>
     * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
     * @return Whether the cashoutPercent field is set.
     */
    boolean hasCashoutPercent();
    /**
     * <pre>
     * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
     * @return The cashoutPercent.
     */
    com.google.protobuf.UInt64Value getCashoutPercent();
    /**
     * <pre>
     * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
     */
    com.google.protobuf.UInt64ValueOrBuilder getCashoutPercentOrBuilder();

    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    java.util.List<com.oddin.ots.TicketCashoutOuterClass.BetCashout> 
        getBetCashoutList();
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    com.oddin.ots.TicketCashoutOuterClass.BetCashout getBetCashout(int index);
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    int getBetCashoutCount();
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    java.util.List<? extends com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder> 
        getBetCashoutOrBuilderList();
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder getBetCashoutOrBuilder(
        int index);

    /**
     * <pre>
     * Stake multiplier for stake - optional value to use instead of 10000
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
     * @return Whether the stakeMultiplier field is set.
     */
    boolean hasStakeMultiplier();
    /**
     * <pre>
     * Stake multiplier for stake - optional value to use instead of 10000
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
     * @return The stakeMultiplier.
     */
    com.google.protobuf.UInt64Value getStakeMultiplier();
    /**
     * <pre>
     * Stake multiplier for stake - optional value to use instead of 10000
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
     */
    com.google.protobuf.UInt64ValueOrBuilder getStakeMultiplierOrBuilder();
  }
  /**
   * <pre>
   * TicketCashout is used as request for Ticket Cashout RPC call.
   * </pre>
   *
   * Protobuf type {@code ots.TicketCashout}
   */
  public static final class TicketCashout extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ots.TicketCashout)
      TicketCashoutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TicketCashout.newBuilder() to construct.
    private TicketCashout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TicketCashout() {
      id_ = "";
      betCashout_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TicketCashout();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.oddin.ots.TicketCashoutOuterClass.TicketCashout.class, com.oddin.ots.TicketCashoutOuterClass.TicketCashout.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique ticket id from operator’s system.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * Timestamp of request creation.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return timestamp_ != null;
    }
    /**
     * <pre>
     * Timestamp of request creation.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * Timestamp of request creation.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    public static final int CASHOUT_STAKE_FIELD_NUMBER = 3;
    private com.google.protobuf.UInt64Value cashoutStake_;
    /**
     * <pre>
     * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
     * @return Whether the cashoutStake field is set.
     */
    @java.lang.Override
    public boolean hasCashoutStake() {
      return cashoutStake_ != null;
    }
    /**
     * <pre>
     * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
     * @return The cashoutStake.
     */
    @java.lang.Override
    public com.google.protobuf.UInt64Value getCashoutStake() {
      return cashoutStake_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
    }
    /**
     * <pre>
     * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt64ValueOrBuilder getCashoutStakeOrBuilder() {
      return cashoutStake_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
    }

    public static final int CASHOUT_PERCENT_FIELD_NUMBER = 4;
    private com.google.protobuf.UInt64Value cashoutPercent_;
    /**
     * <pre>
     * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
     * @return Whether the cashoutPercent field is set.
     */
    @java.lang.Override
    public boolean hasCashoutPercent() {
      return cashoutPercent_ != null;
    }
    /**
     * <pre>
     * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
     * @return The cashoutPercent.
     */
    @java.lang.Override
    public com.google.protobuf.UInt64Value getCashoutPercent() {
      return cashoutPercent_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
    }
    /**
     * <pre>
     * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt64ValueOrBuilder getCashoutPercentOrBuilder() {
      return cashoutPercent_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
    }

    public static final int BET_CASHOUT_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<com.oddin.ots.TicketCashoutOuterClass.BetCashout> betCashout_;
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    @java.lang.Override
    public java.util.List<com.oddin.ots.TicketCashoutOuterClass.BetCashout> getBetCashoutList() {
      return betCashout_;
    }
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder> 
        getBetCashoutOrBuilderList() {
      return betCashout_;
    }
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    @java.lang.Override
    public int getBetCashoutCount() {
      return betCashout_.size();
    }
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.BetCashout getBetCashout(int index) {
      return betCashout_.get(index);
    }
    /**
     * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
     */
    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder getBetCashoutOrBuilder(
        int index) {
      return betCashout_.get(index);
    }

    public static final int STAKE_MULTIPLIER_FIELD_NUMBER = 15;
    private com.google.protobuf.UInt64Value stakeMultiplier_;
    /**
     * <pre>
     * Stake multiplier for stake - optional value to use instead of 10000
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
     * @return Whether the stakeMultiplier field is set.
     */
    @java.lang.Override
    public boolean hasStakeMultiplier() {
      return stakeMultiplier_ != null;
    }
    /**
     * <pre>
     * Stake multiplier for stake - optional value to use instead of 10000
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
     * @return The stakeMultiplier.
     */
    @java.lang.Override
    public com.google.protobuf.UInt64Value getStakeMultiplier() {
      return stakeMultiplier_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : stakeMultiplier_;
    }
    /**
     * <pre>
     * Stake multiplier for stake - optional value to use instead of 10000
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt64ValueOrBuilder getStakeMultiplierOrBuilder() {
      return stakeMultiplier_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : stakeMultiplier_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (timestamp_ != null) {
        output.writeMessage(2, getTimestamp());
      }
      if (cashoutStake_ != null) {
        output.writeMessage(3, getCashoutStake());
      }
      if (cashoutPercent_ != null) {
        output.writeMessage(4, getCashoutPercent());
      }
      for (int i = 0; i < betCashout_.size(); i++) {
        output.writeMessage(5, betCashout_.get(i));
      }
      if (stakeMultiplier_ != null) {
        output.writeMessage(15, getStakeMultiplier());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (timestamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTimestamp());
      }
      if (cashoutStake_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCashoutStake());
      }
      if (cashoutPercent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCashoutPercent());
      }
      for (int i = 0; i < betCashout_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, betCashout_.get(i));
      }
      if (stakeMultiplier_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getStakeMultiplier());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.oddin.ots.TicketCashoutOuterClass.TicketCashout)) {
        return super.equals(obj);
      }
      com.oddin.ots.TicketCashoutOuterClass.TicketCashout other = (com.oddin.ots.TicketCashoutOuterClass.TicketCashout) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
      }
      if (hasCashoutStake() != other.hasCashoutStake()) return false;
      if (hasCashoutStake()) {
        if (!getCashoutStake()
            .equals(other.getCashoutStake())) return false;
      }
      if (hasCashoutPercent() != other.hasCashoutPercent()) return false;
      if (hasCashoutPercent()) {
        if (!getCashoutPercent()
            .equals(other.getCashoutPercent())) return false;
      }
      if (!getBetCashoutList()
          .equals(other.getBetCashoutList())) return false;
      if (hasStakeMultiplier() != other.hasStakeMultiplier()) return false;
      if (hasStakeMultiplier()) {
        if (!getStakeMultiplier()
            .equals(other.getStakeMultiplier())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      if (hasCashoutStake()) {
        hash = (37 * hash) + CASHOUT_STAKE_FIELD_NUMBER;
        hash = (53 * hash) + getCashoutStake().hashCode();
      }
      if (hasCashoutPercent()) {
        hash = (37 * hash) + CASHOUT_PERCENT_FIELD_NUMBER;
        hash = (53 * hash) + getCashoutPercent().hashCode();
      }
      if (getBetCashoutCount() > 0) {
        hash = (37 * hash) + BET_CASHOUT_FIELD_NUMBER;
        hash = (53 * hash) + getBetCashoutList().hashCode();
      }
      if (hasStakeMultiplier()) {
        hash = (37 * hash) + STAKE_MULTIPLIER_FIELD_NUMBER;
        hash = (53 * hash) + getStakeMultiplier().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.oddin.ots.TicketCashoutOuterClass.TicketCashout prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TicketCashout is used as request for Ticket Cashout RPC call.
     * </pre>
     *
     * Protobuf type {@code ots.TicketCashout}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ots.TicketCashout)
        com.oddin.ots.TicketCashoutOuterClass.TicketCashoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashout_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.oddin.ots.TicketCashoutOuterClass.TicketCashout.class, com.oddin.ots.TicketCashoutOuterClass.TicketCashout.Builder.class);
      }

      // Construct using com.oddin.ots.TicketCashoutOuterClass.TicketCashout.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        cashoutStake_ = null;
        if (cashoutStakeBuilder_ != null) {
          cashoutStakeBuilder_.dispose();
          cashoutStakeBuilder_ = null;
        }
        cashoutPercent_ = null;
        if (cashoutPercentBuilder_ != null) {
          cashoutPercentBuilder_.dispose();
          cashoutPercentBuilder_ = null;
        }
        if (betCashoutBuilder_ == null) {
          betCashout_ = java.util.Collections.emptyList();
        } else {
          betCashout_ = null;
          betCashoutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        stakeMultiplier_ = null;
        if (stakeMultiplierBuilder_ != null) {
          stakeMultiplierBuilder_.dispose();
          stakeMultiplierBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.oddin.ots.TicketCashoutOuterClass.internal_static_ots_TicketCashout_descriptor;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashout getDefaultInstanceForType() {
        return com.oddin.ots.TicketCashoutOuterClass.TicketCashout.getDefaultInstance();
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashout build() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.oddin.ots.TicketCashoutOuterClass.TicketCashout buildPartial() {
        com.oddin.ots.TicketCashoutOuterClass.TicketCashout result = new com.oddin.ots.TicketCashoutOuterClass.TicketCashout(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.oddin.ots.TicketCashoutOuterClass.TicketCashout result) {
        if (betCashoutBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            betCashout_ = java.util.Collections.unmodifiableList(betCashout_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.betCashout_ = betCashout_;
        } else {
          result.betCashout_ = betCashoutBuilder_.build();
        }
      }

      private void buildPartial0(com.oddin.ots.TicketCashoutOuterClass.TicketCashout result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.timestamp_ = timestampBuilder_ == null
              ? timestamp_
              : timestampBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cashoutStake_ = cashoutStakeBuilder_ == null
              ? cashoutStake_
              : cashoutStakeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.cashoutPercent_ = cashoutPercentBuilder_ == null
              ? cashoutPercent_
              : cashoutPercentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.stakeMultiplier_ = stakeMultiplierBuilder_ == null
              ? stakeMultiplier_
              : stakeMultiplierBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.oddin.ots.TicketCashoutOuterClass.TicketCashout) {
          return mergeFrom((com.oddin.ots.TicketCashoutOuterClass.TicketCashout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.oddin.ots.TicketCashoutOuterClass.TicketCashout other) {
        if (other == com.oddin.ots.TicketCashoutOuterClass.TicketCashout.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (other.hasCashoutStake()) {
          mergeCashoutStake(other.getCashoutStake());
        }
        if (other.hasCashoutPercent()) {
          mergeCashoutPercent(other.getCashoutPercent());
        }
        if (betCashoutBuilder_ == null) {
          if (!other.betCashout_.isEmpty()) {
            if (betCashout_.isEmpty()) {
              betCashout_ = other.betCashout_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBetCashoutIsMutable();
              betCashout_.addAll(other.betCashout_);
            }
            onChanged();
          }
        } else {
          if (!other.betCashout_.isEmpty()) {
            if (betCashoutBuilder_.isEmpty()) {
              betCashoutBuilder_.dispose();
              betCashoutBuilder_ = null;
              betCashout_ = other.betCashout_;
              bitField0_ = (bitField0_ & ~0x00000010);
              betCashoutBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBetCashoutFieldBuilder() : null;
            } else {
              betCashoutBuilder_.addAllMessages(other.betCashout_);
            }
          }
        }
        if (other.hasStakeMultiplier()) {
          mergeStakeMultiplier(other.getStakeMultiplier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getTimestampFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getCashoutStakeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getCashoutPercentFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                com.oddin.ots.TicketCashoutOuterClass.BetCashout m =
                    input.readMessage(
                        com.oddin.ots.TicketCashoutOuterClass.BetCashout.parser(),
                        extensionRegistry);
                if (betCashoutBuilder_ == null) {
                  ensureBetCashoutIsMutable();
                  betCashout_.add(m);
                } else {
                  betCashoutBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 122: {
                input.readMessage(
                    getStakeMultiplierFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 122
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ticket id from operator’s system.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp timestamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       * @return Whether the timestamp field is set.
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       * @return The timestamp.
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
        } else {
          timestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            timestamp_ != null &&
            timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getTimestampBuilder().mergeFrom(value);
          } else {
            timestamp_ = value;
          }
        } else {
          timestampBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = null;
        if (timestampBuilder_ != null) {
          timestampBuilder_.dispose();
          timestampBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * Timestamp of request creation.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private com.google.protobuf.UInt64Value cashoutStake_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> cashoutStakeBuilder_;
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       * @return Whether the cashoutStake field is set.
       */
      public boolean hasCashoutStake() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       * @return The cashoutStake.
       */
      public com.google.protobuf.UInt64Value getCashoutStake() {
        if (cashoutStakeBuilder_ == null) {
          return cashoutStake_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
        } else {
          return cashoutStakeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      public Builder setCashoutStake(com.google.protobuf.UInt64Value value) {
        if (cashoutStakeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cashoutStake_ = value;
        } else {
          cashoutStakeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      public Builder setCashoutStake(
          com.google.protobuf.UInt64Value.Builder builderForValue) {
        if (cashoutStakeBuilder_ == null) {
          cashoutStake_ = builderForValue.build();
        } else {
          cashoutStakeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      public Builder mergeCashoutStake(com.google.protobuf.UInt64Value value) {
        if (cashoutStakeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            cashoutStake_ != null &&
            cashoutStake_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
            getCashoutStakeBuilder().mergeFrom(value);
          } else {
            cashoutStake_ = value;
          }
        } else {
          cashoutStakeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      public Builder clearCashoutStake() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cashoutStake_ = null;
        if (cashoutStakeBuilder_ != null) {
          cashoutStakeBuilder_.dispose();
          cashoutStakeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      public com.google.protobuf.UInt64Value.Builder getCashoutStakeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCashoutStakeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      public com.google.protobuf.UInt64ValueOrBuilder getCashoutStakeOrBuilder() {
        if (cashoutStakeBuilder_ != null) {
          return cashoutStakeBuilder_.getMessageOrBuilder();
        } else {
          return cashoutStake_ == null ?
              com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutStake_;
        }
      }
      /**
       * <pre>
       * Total cashout amount. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_stake = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
          getCashoutStakeFieldBuilder() {
        if (cashoutStakeBuilder_ == null) {
          cashoutStakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                  getCashoutStake(),
                  getParentForChildren(),
                  isClean());
          cashoutStake_ = null;
        }
        return cashoutStakeBuilder_;
      }

      private com.google.protobuf.UInt64Value cashoutPercent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> cashoutPercentBuilder_;
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       * @return Whether the cashoutPercent field is set.
       */
      public boolean hasCashoutPercent() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       * @return The cashoutPercent.
       */
      public com.google.protobuf.UInt64Value getCashoutPercent() {
        if (cashoutPercentBuilder_ == null) {
          return cashoutPercent_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
        } else {
          return cashoutPercentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      public Builder setCashoutPercent(com.google.protobuf.UInt64Value value) {
        if (cashoutPercentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cashoutPercent_ = value;
        } else {
          cashoutPercentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      public Builder setCashoutPercent(
          com.google.protobuf.UInt64Value.Builder builderForValue) {
        if (cashoutPercentBuilder_ == null) {
          cashoutPercent_ = builderForValue.build();
        } else {
          cashoutPercentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      public Builder mergeCashoutPercent(com.google.protobuf.UInt64Value value) {
        if (cashoutPercentBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            cashoutPercent_ != null &&
            cashoutPercent_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
            getCashoutPercentBuilder().mergeFrom(value);
          } else {
            cashoutPercent_ = value;
          }
        } else {
          cashoutPercentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      public Builder clearCashoutPercent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cashoutPercent_ = null;
        if (cashoutPercentBuilder_ != null) {
          cashoutPercentBuilder_.dispose();
          cashoutPercentBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      public com.google.protobuf.UInt64Value.Builder getCashoutPercentBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCashoutPercentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      public com.google.protobuf.UInt64ValueOrBuilder getCashoutPercentOrBuilder() {
        if (cashoutPercentBuilder_ != null) {
          return cashoutPercentBuilder_.getMessageOrBuilder();
        } else {
          return cashoutPercent_ == null ?
              com.google.protobuf.UInt64Value.getDefaultInstance() : cashoutPercent_;
        }
      }
      /**
       * <pre>
       * Total cashout percent. Applicable for whole ticket. It needs to be multiplied by 10000 (or ticket stake multiplier) and rounded to long value in local currency. All subsequent partial cashout must include previous values.
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value cashout_percent = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
          getCashoutPercentFieldBuilder() {
        if (cashoutPercentBuilder_ == null) {
          cashoutPercentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                  getCashoutPercent(),
                  getParentForChildren(),
                  isClean());
          cashoutPercent_ = null;
        }
        return cashoutPercentBuilder_;
      }

      private java.util.List<com.oddin.ots.TicketCashoutOuterClass.BetCashout> betCashout_ =
        java.util.Collections.emptyList();
      private void ensureBetCashoutIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          betCashout_ = new java.util.ArrayList<com.oddin.ots.TicketCashoutOuterClass.BetCashout>(betCashout_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.oddin.ots.TicketCashoutOuterClass.BetCashout, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder, com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder> betCashoutBuilder_;

      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public java.util.List<com.oddin.ots.TicketCashoutOuterClass.BetCashout> getBetCashoutList() {
        if (betCashoutBuilder_ == null) {
          return java.util.Collections.unmodifiableList(betCashout_);
        } else {
          return betCashoutBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public int getBetCashoutCount() {
        if (betCashoutBuilder_ == null) {
          return betCashout_.size();
        } else {
          return betCashoutBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout getBetCashout(int index) {
        if (betCashoutBuilder_ == null) {
          return betCashout_.get(index);
        } else {
          return betCashoutBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder setBetCashout(
          int index, com.oddin.ots.TicketCashoutOuterClass.BetCashout value) {
        if (betCashoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBetCashoutIsMutable();
          betCashout_.set(index, value);
          onChanged();
        } else {
          betCashoutBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder setBetCashout(
          int index, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder builderForValue) {
        if (betCashoutBuilder_ == null) {
          ensureBetCashoutIsMutable();
          betCashout_.set(index, builderForValue.build());
          onChanged();
        } else {
          betCashoutBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder addBetCashout(com.oddin.ots.TicketCashoutOuterClass.BetCashout value) {
        if (betCashoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBetCashoutIsMutable();
          betCashout_.add(value);
          onChanged();
        } else {
          betCashoutBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder addBetCashout(
          int index, com.oddin.ots.TicketCashoutOuterClass.BetCashout value) {
        if (betCashoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBetCashoutIsMutable();
          betCashout_.add(index, value);
          onChanged();
        } else {
          betCashoutBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder addBetCashout(
          com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder builderForValue) {
        if (betCashoutBuilder_ == null) {
          ensureBetCashoutIsMutable();
          betCashout_.add(builderForValue.build());
          onChanged();
        } else {
          betCashoutBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder addBetCashout(
          int index, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder builderForValue) {
        if (betCashoutBuilder_ == null) {
          ensureBetCashoutIsMutable();
          betCashout_.add(index, builderForValue.build());
          onChanged();
        } else {
          betCashoutBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder addAllBetCashout(
          java.lang.Iterable<? extends com.oddin.ots.TicketCashoutOuterClass.BetCashout> values) {
        if (betCashoutBuilder_ == null) {
          ensureBetCashoutIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, betCashout_);
          onChanged();
        } else {
          betCashoutBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder clearBetCashout() {
        if (betCashoutBuilder_ == null) {
          betCashout_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          betCashoutBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public Builder removeBetCashout(int index) {
        if (betCashoutBuilder_ == null) {
          ensureBetCashoutIsMutable();
          betCashout_.remove(index);
          onChanged();
        } else {
          betCashoutBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder getBetCashoutBuilder(
          int index) {
        return getBetCashoutFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder getBetCashoutOrBuilder(
          int index) {
        if (betCashoutBuilder_ == null) {
          return betCashout_.get(index);  } else {
          return betCashoutBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public java.util.List<? extends com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder> 
           getBetCashoutOrBuilderList() {
        if (betCashoutBuilder_ != null) {
          return betCashoutBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(betCashout_);
        }
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder addBetCashoutBuilder() {
        return getBetCashoutFieldBuilder().addBuilder(
            com.oddin.ots.TicketCashoutOuterClass.BetCashout.getDefaultInstance());
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder addBetCashoutBuilder(
          int index) {
        return getBetCashoutFieldBuilder().addBuilder(
            index, com.oddin.ots.TicketCashoutOuterClass.BetCashout.getDefaultInstance());
      }
      /**
       * <code>repeated .ots.BetCashout bet_cashout = 5;</code>
       */
      public java.util.List<com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder> 
           getBetCashoutBuilderList() {
        return getBetCashoutFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.oddin.ots.TicketCashoutOuterClass.BetCashout, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder, com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder> 
          getBetCashoutFieldBuilder() {
        if (betCashoutBuilder_ == null) {
          betCashoutBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.oddin.ots.TicketCashoutOuterClass.BetCashout, com.oddin.ots.TicketCashoutOuterClass.BetCashout.Builder, com.oddin.ots.TicketCashoutOuterClass.BetCashoutOrBuilder>(
                  betCashout_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          betCashout_ = null;
        }
        return betCashoutBuilder_;
      }

      private com.google.protobuf.UInt64Value stakeMultiplier_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> stakeMultiplierBuilder_;
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       * @return Whether the stakeMultiplier field is set.
       */
      public boolean hasStakeMultiplier() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       * @return The stakeMultiplier.
       */
      public com.google.protobuf.UInt64Value getStakeMultiplier() {
        if (stakeMultiplierBuilder_ == null) {
          return stakeMultiplier_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : stakeMultiplier_;
        } else {
          return stakeMultiplierBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      public Builder setStakeMultiplier(com.google.protobuf.UInt64Value value) {
        if (stakeMultiplierBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stakeMultiplier_ = value;
        } else {
          stakeMultiplierBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      public Builder setStakeMultiplier(
          com.google.protobuf.UInt64Value.Builder builderForValue) {
        if (stakeMultiplierBuilder_ == null) {
          stakeMultiplier_ = builderForValue.build();
        } else {
          stakeMultiplierBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      public Builder mergeStakeMultiplier(com.google.protobuf.UInt64Value value) {
        if (stakeMultiplierBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            stakeMultiplier_ != null &&
            stakeMultiplier_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
            getStakeMultiplierBuilder().mergeFrom(value);
          } else {
            stakeMultiplier_ = value;
          }
        } else {
          stakeMultiplierBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      public Builder clearStakeMultiplier() {
        bitField0_ = (bitField0_ & ~0x00000020);
        stakeMultiplier_ = null;
        if (stakeMultiplierBuilder_ != null) {
          stakeMultiplierBuilder_.dispose();
          stakeMultiplierBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      public com.google.protobuf.UInt64Value.Builder getStakeMultiplierBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getStakeMultiplierFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      public com.google.protobuf.UInt64ValueOrBuilder getStakeMultiplierOrBuilder() {
        if (stakeMultiplierBuilder_ != null) {
          return stakeMultiplierBuilder_.getMessageOrBuilder();
        } else {
          return stakeMultiplier_ == null ?
              com.google.protobuf.UInt64Value.getDefaultInstance() : stakeMultiplier_;
        }
      }
      /**
       * <pre>
       * Stake multiplier for stake - optional value to use instead of 10000
       * </pre>
       *
       * <code>.google.protobuf.UInt64Value stake_multiplier = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
          getStakeMultiplierFieldBuilder() {
        if (stakeMultiplierBuilder_ == null) {
          stakeMultiplierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                  getStakeMultiplier(),
                  getParentForChildren(),
                  isClean());
          stakeMultiplier_ = null;
        }
        return stakeMultiplierBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ots.TicketCashout)
    }

    // @@protoc_insertion_point(class_scope:ots.TicketCashout)
    private static final com.oddin.ots.TicketCashoutOuterClass.TicketCashout DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.oddin.ots.TicketCashoutOuterClass.TicketCashout();
    }

    public static com.oddin.ots.TicketCashoutOuterClass.TicketCashout getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TicketCashout>
        PARSER = new com.google.protobuf.AbstractParser<TicketCashout>() {
      @java.lang.Override
      public TicketCashout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TicketCashout> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TicketCashout> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.oddin.ots.TicketCashoutOuterClass.TicketCashout getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ots_TicketCashoutRejectReason_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ots_TicketCashoutRejectReason_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ots_TicketCashoutState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ots_TicketCashoutState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ots_BetCashout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ots_BetCashout_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ots_TicketCashout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ots_TicketCashout_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030ots/ticket_cashout.proto\022\003ots\032\036google/" +
      "protobuf/wrappers.proto\032\037google/protobuf" +
      "/timestamp.proto\032\024ots/enum/enums.proto\"\373" +
      "\001\n\031TicketCashoutRejectReason\0221\n\004code\030\001 \001" +
      "(\0162#.ots.TicketCashoutRejectReason.Code\022" +
      "\017\n\007message\030\002 \001(\t\"\231\001\n\004Code\022\024\n\020CODE_UNSPEC" +
      "IFIED\020\000\022\021\n\rCODE_INTERNAL\020\001\022\031\n\025CODE_INVAL" +
      "ID_ARGUMENT\020\002\022\022\n\016CODE_NOT_FOUND\020\003\022\033\n\027COD" +
      "E_WRONG_TICKET_STAKE\020\004\022\034\n\030CODE_MAX_PAYOU" +
      "T_BREACHED\020\005\"\213\001\n\022TicketCashoutState\022\n\n\002i" +
      "d\030\001 \001(\t\0222\n\rticket_status\030\002 \001(\0162\033.ots.enu" +
      "ms.AcceptanceStatus\0225\n\rreject_reason\030\003 \001" +
      "(\0132\036.ots.TicketCashoutRejectReason\"\242\001\n\nB" +
      "etCashout\022(\n\002id\030\001 \001(\0132\034.google.protobuf." +
      "StringValue\0223\n\rcashout_stake\030\002 \001(\0132\034.goo" +
      "gle.protobuf.UInt64Value\0225\n\017cashout_perc" +
      "ent\030\003 \001(\0132\034.google.protobuf.UInt64Value\"" +
      "\224\002\n\rTicketCashout\022\n\n\002id\030\001 \001(\t\022-\n\ttimesta" +
      "mp\030\002 \001(\0132\032.google.protobuf.Timestamp\0223\n\r" +
      "cashout_stake\030\003 \001(\0132\034.google.protobuf.UI" +
      "nt64Value\0225\n\017cashout_percent\030\004 \001(\0132\034.goo" +
      "gle.protobuf.UInt64Value\022$\n\013bet_cashout\030" +
      "\005 \003(\0132\017.ots.BetCashout\0226\n\020stake_multipli" +
      "er\030\017 \001(\0132\034.google.protobuf.UInt64ValueB\035" +
      "\n\rcom.oddin.otsZ\014oddin.gg/otsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.oddin.ots.Enums.getDescriptor(),
        });
    internal_static_ots_TicketCashoutRejectReason_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ots_TicketCashoutRejectReason_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ots_TicketCashoutRejectReason_descriptor,
        new java.lang.String[] { "Code", "Message", });
    internal_static_ots_TicketCashoutState_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ots_TicketCashoutState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ots_TicketCashoutState_descriptor,
        new java.lang.String[] { "Id", "TicketStatus", "RejectReason", });
    internal_static_ots_BetCashout_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ots_BetCashout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ots_BetCashout_descriptor,
        new java.lang.String[] { "Id", "CashoutStake", "CashoutPercent", });
    internal_static_ots_TicketCashout_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ots_TicketCashout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ots_TicketCashout_descriptor,
        new java.lang.String[] { "Id", "Timestamp", "CashoutStake", "CashoutPercent", "BetCashout", "StakeMultiplier", });
    com.google.protobuf.WrappersProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.oddin.ots.Enums.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
