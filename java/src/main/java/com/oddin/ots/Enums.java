// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ots/enum/enums.proto

package com.oddin.ots;

public final class Enums {
  private Enums() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ots.enums.ResultingStatus}
   */
  public enum ResultingStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>RESULTING_STATUS_UNSPECIFIED = 0;</code>
     */
    RESULTING_STATUS_UNSPECIFIED(0),
    /**
     * <code>RESULTING_STATUS_WON = 1;</code>
     */
    RESULTING_STATUS_WON(1),
    /**
     * <code>RESULTING_STATUS_VOIDED = 2;</code>
     */
    RESULTING_STATUS_VOIDED(2),
    /**
     * <code>RESULTING_STATUS_LOST = 3;</code>
     */
    RESULTING_STATUS_LOST(3),
    /**
     * <code>RESULTING_STATUS_NOT_RESULTED = 4;</code>
     */
    RESULTING_STATUS_NOT_RESULTED(4),
    /**
     * <code>RESULTING_STATUS_PENDING_LOST = 5;</code>
     */
    RESULTING_STATUS_PENDING_LOST(5),
    /**
     * <code>RESULTING_STATUS_REJECTED = 6;</code>
     */
    RESULTING_STATUS_REJECTED(6),
    /**
     * <code>RESULTING_STATUS_HALF_WON = 7;</code>
     */
    RESULTING_STATUS_HALF_WON(7),
    /**
     * <code>RESULTING_STATUS_HALF_LOST = 8;</code>
     */
    RESULTING_STATUS_HALF_LOST(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>RESULTING_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int RESULTING_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>RESULTING_STATUS_WON = 1;</code>
     */
    public static final int RESULTING_STATUS_WON_VALUE = 1;
    /**
     * <code>RESULTING_STATUS_VOIDED = 2;</code>
     */
    public static final int RESULTING_STATUS_VOIDED_VALUE = 2;
    /**
     * <code>RESULTING_STATUS_LOST = 3;</code>
     */
    public static final int RESULTING_STATUS_LOST_VALUE = 3;
    /**
     * <code>RESULTING_STATUS_NOT_RESULTED = 4;</code>
     */
    public static final int RESULTING_STATUS_NOT_RESULTED_VALUE = 4;
    /**
     * <code>RESULTING_STATUS_PENDING_LOST = 5;</code>
     */
    public static final int RESULTING_STATUS_PENDING_LOST_VALUE = 5;
    /**
     * <code>RESULTING_STATUS_REJECTED = 6;</code>
     */
    public static final int RESULTING_STATUS_REJECTED_VALUE = 6;
    /**
     * <code>RESULTING_STATUS_HALF_WON = 7;</code>
     */
    public static final int RESULTING_STATUS_HALF_WON_VALUE = 7;
    /**
     * <code>RESULTING_STATUS_HALF_LOST = 8;</code>
     */
    public static final int RESULTING_STATUS_HALF_LOST_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResultingStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResultingStatus forNumber(int value) {
      switch (value) {
        case 0: return RESULTING_STATUS_UNSPECIFIED;
        case 1: return RESULTING_STATUS_WON;
        case 2: return RESULTING_STATUS_VOIDED;
        case 3: return RESULTING_STATUS_LOST;
        case 4: return RESULTING_STATUS_NOT_RESULTED;
        case 5: return RESULTING_STATUS_PENDING_LOST;
        case 6: return RESULTING_STATUS_REJECTED;
        case 7: return RESULTING_STATUS_HALF_WON;
        case 8: return RESULTING_STATUS_HALF_LOST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResultingStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResultingStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResultingStatus>() {
            public ResultingStatus findValueByNumber(int number) {
              return ResultingStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(0);
    }

    private static final ResultingStatus[] VALUES = values();

    public static ResultingStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResultingStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.ResultingStatus)
  }

  /**
   * Protobuf enum {@code ots.enums.AcceptanceStatus}
   */
  public enum AcceptanceStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>ACCEPTANCE_STATUS_UNSPECIFIED = 0;</code>
     */
    ACCEPTANCE_STATUS_UNSPECIFIED(0),
    /**
     * <code>ACCEPTANCE_STATUS_REJECTED = 1;</code>
     */
    ACCEPTANCE_STATUS_REJECTED(1),
    /**
     * <code>ACCEPTANCE_STATUS_ACCEPTED = 2;</code>
     */
    ACCEPTANCE_STATUS_ACCEPTED(2),
    /**
     * <code>ACCEPTANCE_STATUS_PENDING = 3;</code>
     */
    ACCEPTANCE_STATUS_PENDING(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>ACCEPTANCE_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int ACCEPTANCE_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>ACCEPTANCE_STATUS_REJECTED = 1;</code>
     */
    public static final int ACCEPTANCE_STATUS_REJECTED_VALUE = 1;
    /**
     * <code>ACCEPTANCE_STATUS_ACCEPTED = 2;</code>
     */
    public static final int ACCEPTANCE_STATUS_ACCEPTED_VALUE = 2;
    /**
     * <code>ACCEPTANCE_STATUS_PENDING = 3;</code>
     */
    public static final int ACCEPTANCE_STATUS_PENDING_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AcceptanceStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AcceptanceStatus forNumber(int value) {
      switch (value) {
        case 0: return ACCEPTANCE_STATUS_UNSPECIFIED;
        case 1: return ACCEPTANCE_STATUS_REJECTED;
        case 2: return ACCEPTANCE_STATUS_ACCEPTED;
        case 3: return ACCEPTANCE_STATUS_PENDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AcceptanceStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AcceptanceStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AcceptanceStatus>() {
            public AcceptanceStatus findValueByNumber(int number) {
              return AcceptanceStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(1);
    }

    private static final AcceptanceStatus[] VALUES = values();

    public static AcceptanceStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AcceptanceStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.AcceptanceStatus)
  }

  /**
   * Protobuf enum {@code ots.enums.CancelStatus}
   */
  public enum CancelStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>CANCEL_STATUS_UNSPECIFIED = 0;</code>
     */
    CANCEL_STATUS_UNSPECIFIED(0),
    /**
     * <code>CANCEL_STATUS_NOT_CANCELED = 1;</code>
     */
    CANCEL_STATUS_NOT_CANCELED(1),
    /**
     * <code>CANCEL_STATUS_CANCELED = 2;</code>
     */
    CANCEL_STATUS_CANCELED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>CANCEL_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int CANCEL_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>CANCEL_STATUS_NOT_CANCELED = 1;</code>
     */
    public static final int CANCEL_STATUS_NOT_CANCELED_VALUE = 1;
    /**
     * <code>CANCEL_STATUS_CANCELED = 2;</code>
     */
    public static final int CANCEL_STATUS_CANCELED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CancelStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CancelStatus forNumber(int value) {
      switch (value) {
        case 0: return CANCEL_STATUS_UNSPECIFIED;
        case 1: return CANCEL_STATUS_NOT_CANCELED;
        case 2: return CANCEL_STATUS_CANCELED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CancelStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CancelStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CancelStatus>() {
            public CancelStatus findValueByNumber(int number) {
              return CancelStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(2);
    }

    private static final CancelStatus[] VALUES = values();

    public static CancelStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CancelStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.CancelStatus)
  }

  /**
   * Protobuf enum {@code ots.enums.CancelReason}
   */
  public enum CancelReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid reason. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>CANCEL_REASON_UNSPECIFIED = 0;</code>
     */
    CANCEL_REASON_UNSPECIFIED(0),
    /**
     * <pre>
     * Please use this code if a ticket response was not received within a given time.
     * </pre>
     *
     * <code>CANCEL_REASON_TICKET_TIMEOUT = 1;</code>
     */
    CANCEL_REASON_TICKET_TIMEOUT(1),
    /**
     * <pre>
     * Should be used in case the ticket information was wrong and the client will send the corrected ticket in future.
     * </pre>
     *
     * <code>CANCEL_REASON_WRONG_TICKET = 2;</code>
     */
    CANCEL_REASON_WRONG_TICKET(2),
    /**
     * <pre>
     * Clients should use this if they discover a technical issue,
     * correct it and now need to cancel tickets affected by technical issues.
     * </pre>
     *
     * <code>CANCEL_REASON_TECHNICAL_ISSUE = 3;</code>
     */
    CANCEL_REASON_TECHNICAL_ISSUE(3),
    /**
     * <pre>
     * Should be used in case none of the above codes works.
     * </pre>
     *
     * <code>CANCEL_REASON_UNEXPECTED_ISSUE = 4;</code>
     */
    CANCEL_REASON_UNEXPECTED_ISSUE(4),
    /**
     * <pre>
     * Regulator requested to cancel the ticket.
     * </pre>
     *
     * <code>CANCEL_REASON_REGULATOR = 5;</code>
     */
    CANCEL_REASON_REGULATOR(5),
    /**
     * <pre>
     * Foreign stake can't be accepted.
     * </pre>
     *
     * <code>CANCEL_REASON_FOREIGN_STAKE_REJECTED = 6;</code>
     */
    CANCEL_REASON_FOREIGN_STAKE_REJECTED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid reason. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>CANCEL_REASON_UNSPECIFIED = 0;</code>
     */
    public static final int CANCEL_REASON_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Please use this code if a ticket response was not received within a given time.
     * </pre>
     *
     * <code>CANCEL_REASON_TICKET_TIMEOUT = 1;</code>
     */
    public static final int CANCEL_REASON_TICKET_TIMEOUT_VALUE = 1;
    /**
     * <pre>
     * Should be used in case the ticket information was wrong and the client will send the corrected ticket in future.
     * </pre>
     *
     * <code>CANCEL_REASON_WRONG_TICKET = 2;</code>
     */
    public static final int CANCEL_REASON_WRONG_TICKET_VALUE = 2;
    /**
     * <pre>
     * Clients should use this if they discover a technical issue,
     * correct it and now need to cancel tickets affected by technical issues.
     * </pre>
     *
     * <code>CANCEL_REASON_TECHNICAL_ISSUE = 3;</code>
     */
    public static final int CANCEL_REASON_TECHNICAL_ISSUE_VALUE = 3;
    /**
     * <pre>
     * Should be used in case none of the above codes works.
     * </pre>
     *
     * <code>CANCEL_REASON_UNEXPECTED_ISSUE = 4;</code>
     */
    public static final int CANCEL_REASON_UNEXPECTED_ISSUE_VALUE = 4;
    /**
     * <pre>
     * Regulator requested to cancel the ticket.
     * </pre>
     *
     * <code>CANCEL_REASON_REGULATOR = 5;</code>
     */
    public static final int CANCEL_REASON_REGULATOR_VALUE = 5;
    /**
     * <pre>
     * Foreign stake can't be accepted.
     * </pre>
     *
     * <code>CANCEL_REASON_FOREIGN_STAKE_REJECTED = 6;</code>
     */
    public static final int CANCEL_REASON_FOREIGN_STAKE_REJECTED_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CancelReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CancelReason forNumber(int value) {
      switch (value) {
        case 0: return CANCEL_REASON_UNSPECIFIED;
        case 1: return CANCEL_REASON_TICKET_TIMEOUT;
        case 2: return CANCEL_REASON_WRONG_TICKET;
        case 3: return CANCEL_REASON_TECHNICAL_ISSUE;
        case 4: return CANCEL_REASON_UNEXPECTED_ISSUE;
        case 5: return CANCEL_REASON_REGULATOR;
        case 6: return CANCEL_REASON_FOREIGN_STAKE_REJECTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CancelReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CancelReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CancelReason>() {
            public CancelReason findValueByNumber(int number) {
              return CancelReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(3);
    }

    private static final CancelReason[] VALUES = values();

    public static CancelReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CancelReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.CancelReason)
  }

  /**
   * Protobuf enum {@code ots.enums.CancelRejectionReason}
   */
  public enum CancelRejectionReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid reason. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_UNSPECIFIED = 0;</code>
     */
    CANCEL_REJECT_REASON_UNSPECIFIED(0),
    /**
     * <pre>
     * Ticket was not found in OTS system.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_TICKET_NOT_FOUND = 1;</code>
     */
    CANCEL_REJECT_REASON_TICKET_NOT_FOUND(1),
    /**
     * <pre>
     * Time for receiving ticket cancellation has passed.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_TIME_EXPIRED = 2;</code>
     */
    CANCEL_REJECT_REASON_TIME_EXPIRED(2),
    /**
     * <pre>
     * Ticket is already settled and cannot be canceled.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_ALREADY_SETTLED = 3;</code>
     */
    CANCEL_REJECT_REASON_ALREADY_SETTLED(3),
    /**
     * <pre>
     * Reason is not specified. More info should be contained in the message field.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_OTHER = 4;</code>
     */
    CANCEL_REJECT_REASON_OTHER(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid reason. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_UNSPECIFIED = 0;</code>
     */
    public static final int CANCEL_REJECT_REASON_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Ticket was not found in OTS system.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_TICKET_NOT_FOUND = 1;</code>
     */
    public static final int CANCEL_REJECT_REASON_TICKET_NOT_FOUND_VALUE = 1;
    /**
     * <pre>
     * Time for receiving ticket cancellation has passed.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_TIME_EXPIRED = 2;</code>
     */
    public static final int CANCEL_REJECT_REASON_TIME_EXPIRED_VALUE = 2;
    /**
     * <pre>
     * Ticket is already settled and cannot be canceled.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_ALREADY_SETTLED = 3;</code>
     */
    public static final int CANCEL_REJECT_REASON_ALREADY_SETTLED_VALUE = 3;
    /**
     * <pre>
     * Reason is not specified. More info should be contained in the message field.
     * </pre>
     *
     * <code>CANCEL_REJECT_REASON_OTHER = 4;</code>
     */
    public static final int CANCEL_REJECT_REASON_OTHER_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CancelRejectionReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CancelRejectionReason forNumber(int value) {
      switch (value) {
        case 0: return CANCEL_REJECT_REASON_UNSPECIFIED;
        case 1: return CANCEL_REJECT_REASON_TICKET_NOT_FOUND;
        case 2: return CANCEL_REJECT_REASON_TIME_EXPIRED;
        case 3: return CANCEL_REJECT_REASON_ALREADY_SETTLED;
        case 4: return CANCEL_REJECT_REASON_OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CancelRejectionReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CancelRejectionReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CancelRejectionReason>() {
            public CancelRejectionReason findValueByNumber(int number) {
              return CancelRejectionReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(4);
    }

    private static final CancelRejectionReason[] VALUES = values();

    public static CancelRejectionReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CancelRejectionReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.CancelRejectionReason)
  }

  /**
   * Protobuf enum {@code ots.enums.BetStakeType}
   */
  public enum BetStakeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid type. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>BET_STAKE_TYPE_UNSPECIFIED = 0;</code>
     */
    BET_STAKE_TYPE_UNSPECIFIED(0),
    /**
     * <code>BET_STAKE_TYPE_SUM = 1;</code>
     */
    BET_STAKE_TYPE_SUM(1),
    /**
     * <code>BET_STAKE_TYPE_UNIT = 2;</code>
     */
    BET_STAKE_TYPE_UNIT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid type. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>BET_STAKE_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int BET_STAKE_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BET_STAKE_TYPE_SUM = 1;</code>
     */
    public static final int BET_STAKE_TYPE_SUM_VALUE = 1;
    /**
     * <code>BET_STAKE_TYPE_UNIT = 2;</code>
     */
    public static final int BET_STAKE_TYPE_UNIT_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BetStakeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BetStakeType forNumber(int value) {
      switch (value) {
        case 0: return BET_STAKE_TYPE_UNSPECIFIED;
        case 1: return BET_STAKE_TYPE_SUM;
        case 2: return BET_STAKE_TYPE_UNIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BetStakeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BetStakeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BetStakeType>() {
            public BetStakeType findValueByNumber(int number) {
              return BetStakeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(5);
    }

    private static final BetStakeType[] VALUES = values();

    public static BetStakeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BetStakeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.BetStakeType)
  }

  /**
   * Protobuf enum {@code ots.enums.AcceptOddsChange}
   */
  public enum AcceptOddsChange
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>ACCEPT_ODDS_CHANGE_UNSPECIFIED = 0;</code>
     */
    ACCEPT_ODDS_CHANGE_UNSPECIFIED(0),
    /**
     * <code>ACCEPT_ODDS_CHANGE_NONE = 1;</code>
     */
    ACCEPT_ODDS_CHANGE_NONE(1),
    /**
     * <code>ACCEPT_ODDS_CHANGE_ANY = 2;</code>
     */
    ACCEPT_ODDS_CHANGE_ANY(2),
    /**
     * <code>ACCEPT_ODDS_CHANGE_HIGHER = 3;</code>
     */
    ACCEPT_ODDS_CHANGE_HIGHER(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>ACCEPT_ODDS_CHANGE_UNSPECIFIED = 0;</code>
     */
    public static final int ACCEPT_ODDS_CHANGE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>ACCEPT_ODDS_CHANGE_NONE = 1;</code>
     */
    public static final int ACCEPT_ODDS_CHANGE_NONE_VALUE = 1;
    /**
     * <code>ACCEPT_ODDS_CHANGE_ANY = 2;</code>
     */
    public static final int ACCEPT_ODDS_CHANGE_ANY_VALUE = 2;
    /**
     * <code>ACCEPT_ODDS_CHANGE_HIGHER = 3;</code>
     */
    public static final int ACCEPT_ODDS_CHANGE_HIGHER_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AcceptOddsChange valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AcceptOddsChange forNumber(int value) {
      switch (value) {
        case 0: return ACCEPT_ODDS_CHANGE_UNSPECIFIED;
        case 1: return ACCEPT_ODDS_CHANGE_NONE;
        case 2: return ACCEPT_ODDS_CHANGE_ANY;
        case 3: return ACCEPT_ODDS_CHANGE_HIGHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AcceptOddsChange>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AcceptOddsChange> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AcceptOddsChange>() {
            public AcceptOddsChange findValueByNumber(int number) {
              return AcceptOddsChange.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(6);
    }

    private static final AcceptOddsChange[] VALUES = values();

    public static AcceptOddsChange valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AcceptOddsChange(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.AcceptOddsChange)
  }

  /**
   * Protobuf enum {@code ots.enums.TicketChannel}
   */
  public enum TicketChannel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>TICKET_CHANNEL_UNSPECIFIED = 0;</code>
     */
    TICKET_CHANNEL_UNSPECIFIED(0),
    /**
     * <code>TICKET_CHANNEL_INTERNET = 1;</code>
     */
    TICKET_CHANNEL_INTERNET(1),
    /**
     * <code>TICKET_CHANNEL_RETAIL = 2;</code>
     */
    TICKET_CHANNEL_RETAIL(2),
    /**
     * <code>TICKET_CHANNEL_TERMINAL = 3;</code>
     */
    TICKET_CHANNEL_TERMINAL(3),
    /**
     * <code>TICKET_CHANNEL_MOBILE = 4;</code>
     */
    TICKET_CHANNEL_MOBILE(4),
    /**
     * <code>TICKET_CHANNEL_PHONE = 5;</code>
     */
    TICKET_CHANNEL_PHONE(5),
    /**
     * <code>TICKET_CHANNEL_SMS = 6;</code>
     */
    TICKET_CHANNEL_SMS(6),
    /**
     * <code>TICKET_CHANNEL_CALL_CENTRE = 7;</code>
     */
    TICKET_CHANNEL_CALL_CENTRE(7),
    /**
     * <code>TICKET_CHANNEL_TV_APP = 8;</code>
     */
    TICKET_CHANNEL_TV_APP(8),
    /**
     * <code>TICKET_CHANNEL_AGENT = 9;</code>
     */
    TICKET_CHANNEL_AGENT(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>TICKET_CHANNEL_UNSPECIFIED = 0;</code>
     */
    public static final int TICKET_CHANNEL_UNSPECIFIED_VALUE = 0;
    /**
     * <code>TICKET_CHANNEL_INTERNET = 1;</code>
     */
    public static final int TICKET_CHANNEL_INTERNET_VALUE = 1;
    /**
     * <code>TICKET_CHANNEL_RETAIL = 2;</code>
     */
    public static final int TICKET_CHANNEL_RETAIL_VALUE = 2;
    /**
     * <code>TICKET_CHANNEL_TERMINAL = 3;</code>
     */
    public static final int TICKET_CHANNEL_TERMINAL_VALUE = 3;
    /**
     * <code>TICKET_CHANNEL_MOBILE = 4;</code>
     */
    public static final int TICKET_CHANNEL_MOBILE_VALUE = 4;
    /**
     * <code>TICKET_CHANNEL_PHONE = 5;</code>
     */
    public static final int TICKET_CHANNEL_PHONE_VALUE = 5;
    /**
     * <code>TICKET_CHANNEL_SMS = 6;</code>
     */
    public static final int TICKET_CHANNEL_SMS_VALUE = 6;
    /**
     * <code>TICKET_CHANNEL_CALL_CENTRE = 7;</code>
     */
    public static final int TICKET_CHANNEL_CALL_CENTRE_VALUE = 7;
    /**
     * <code>TICKET_CHANNEL_TV_APP = 8;</code>
     */
    public static final int TICKET_CHANNEL_TV_APP_VALUE = 8;
    /**
     * <code>TICKET_CHANNEL_AGENT = 9;</code>
     */
    public static final int TICKET_CHANNEL_AGENT_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TicketChannel valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TicketChannel forNumber(int value) {
      switch (value) {
        case 0: return TICKET_CHANNEL_UNSPECIFIED;
        case 1: return TICKET_CHANNEL_INTERNET;
        case 2: return TICKET_CHANNEL_RETAIL;
        case 3: return TICKET_CHANNEL_TERMINAL;
        case 4: return TICKET_CHANNEL_MOBILE;
        case 5: return TICKET_CHANNEL_PHONE;
        case 6: return TICKET_CHANNEL_SMS;
        case 7: return TICKET_CHANNEL_CALL_CENTRE;
        case 8: return TICKET_CHANNEL_TV_APP;
        case 9: return TICKET_CHANNEL_AGENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TicketChannel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TicketChannel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TicketChannel>() {
            public TicketChannel findValueByNumber(int number) {
              return TicketChannel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(7);
    }

    private static final TicketChannel[] VALUES = values();

    public static TicketChannel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TicketChannel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.TicketChannel)
  }

  /**
   * Protobuf enum {@code ots.enums.BetBonusType}
   */
  public enum BetBonusType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid type. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>BET_BONUS_TYPE_UNSPECIFIED = 0;</code>
     */
    BET_BONUS_TYPE_UNSPECIFIED(0),
    /**
     * <code>BET_BONUS_TYPE_TOTAL = 1;</code>
     */
    BET_BONUS_TYPE_TOTAL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid type. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>BET_BONUS_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int BET_BONUS_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BET_BONUS_TYPE_TOTAL = 1;</code>
     */
    public static final int BET_BONUS_TYPE_TOTAL_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BetBonusType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BetBonusType forNumber(int value) {
      switch (value) {
        case 0: return BET_BONUS_TYPE_UNSPECIFIED;
        case 1: return BET_BONUS_TYPE_TOTAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BetBonusType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BetBonusType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BetBonusType>() {
            public BetBonusType findValueByNumber(int number) {
              return BetBonusType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(8);
    }

    private static final BetBonusType[] VALUES = values();

    public static BetBonusType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BetBonusType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.BetBonusType)
  }

  /**
   * Protobuf enum {@code ots.enums.BetBonusMode}
   */
  public enum BetBonusMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid mode. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>BET_BONUS_MODE_UNSPECIFIED = 0;</code>
     */
    BET_BONUS_MODE_UNSPECIFIED(0),
    /**
     * <code>BET_BONUS_MODE_ALL = 1;</code>
     */
    BET_BONUS_MODE_ALL(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid mode. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>BET_BONUS_MODE_UNSPECIFIED = 0;</code>
     */
    public static final int BET_BONUS_MODE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>BET_BONUS_MODE_ALL = 1;</code>
     */
    public static final int BET_BONUS_MODE_ALL_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BetBonusMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BetBonusMode forNumber(int value) {
      switch (value) {
        case 0: return BET_BONUS_MODE_UNSPECIFIED;
        case 1: return BET_BONUS_MODE_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BetBonusMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BetBonusMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BetBonusMode>() {
            public BetBonusMode findValueByNumber(int number) {
              return BetBonusMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(9);
    }

    private static final BetBonusMode[] VALUES = values();

    public static BetBonusMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BetBonusMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.BetBonusMode)
  }

  /**
   * Protobuf enum {@code ots.enums.ReasonCode}
   */
  public enum ReasonCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>REASON_CODE_UNSPECIFIED = 0;</code>
     */
    REASON_CODE_UNSPECIFIED(0),
    /**
     * <code>REASON_CODE_INVALID_ARGUMENT = 1;</code>
     */
    REASON_CODE_INVALID_ARGUMENT(1),
    /**
     * <code>REASON_CODE_ALREADY_EXISTS = 2;</code>
     */
    REASON_CODE_ALREADY_EXISTS(2),
    /**
     * <code>REASON_CODE_NOT_FOUND = 3;</code>
     */
    REASON_CODE_NOT_FOUND(3),
    /**
     * <code>REASON_CODE_UNAVAILABLE = 4;</code>
     */
    REASON_CODE_UNAVAILABLE(4),
    /**
     * <code>REASON_CODE_INTERNAL = 5;</code>
     */
    REASON_CODE_INTERNAL(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a valid value. Used for blocking 0 as invalid state.
     * </pre>
     *
     * <code>REASON_CODE_UNSPECIFIED = 0;</code>
     */
    public static final int REASON_CODE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>REASON_CODE_INVALID_ARGUMENT = 1;</code>
     */
    public static final int REASON_CODE_INVALID_ARGUMENT_VALUE = 1;
    /**
     * <code>REASON_CODE_ALREADY_EXISTS = 2;</code>
     */
    public static final int REASON_CODE_ALREADY_EXISTS_VALUE = 2;
    /**
     * <code>REASON_CODE_NOT_FOUND = 3;</code>
     */
    public static final int REASON_CODE_NOT_FOUND_VALUE = 3;
    /**
     * <code>REASON_CODE_UNAVAILABLE = 4;</code>
     */
    public static final int REASON_CODE_UNAVAILABLE_VALUE = 4;
    /**
     * <code>REASON_CODE_INTERNAL = 5;</code>
     */
    public static final int REASON_CODE_INTERNAL_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReasonCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReasonCode forNumber(int value) {
      switch (value) {
        case 0: return REASON_CODE_UNSPECIFIED;
        case 1: return REASON_CODE_INVALID_ARGUMENT;
        case 2: return REASON_CODE_ALREADY_EXISTS;
        case 3: return REASON_CODE_NOT_FOUND;
        case 4: return REASON_CODE_UNAVAILABLE;
        case 5: return REASON_CODE_INTERNAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReasonCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReasonCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReasonCode>() {
            public ReasonCode findValueByNumber(int number) {
              return ReasonCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.oddin.ots.Enums.getDescriptor().getEnumTypes().get(10);
    }

    private static final ReasonCode[] VALUES = values();

    public static ReasonCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReasonCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ots.enums.ReasonCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024ots/enum/enums.proto\022\tots.enums*\251\002\n\017Re" +
      "sultingStatus\022 \n\034RESULTING_STATUS_UNSPEC" +
      "IFIED\020\000\022\030\n\024RESULTING_STATUS_WON\020\001\022\033\n\027RES" +
      "ULTING_STATUS_VOIDED\020\002\022\031\n\025RESULTING_STAT" +
      "US_LOST\020\003\022!\n\035RESULTING_STATUS_NOT_RESULT" +
      "ED\020\004\022!\n\035RESULTING_STATUS_PENDING_LOST\020\005\022" +
      "\035\n\031RESULTING_STATUS_REJECTED\020\006\022\035\n\031RESULT" +
      "ING_STATUS_HALF_WON\020\007\022\036\n\032RESULTING_STATU" +
      "S_HALF_LOST\020\010*\224\001\n\020AcceptanceStatus\022!\n\035AC" +
      "CEPTANCE_STATUS_UNSPECIFIED\020\000\022\036\n\032ACCEPTA" +
      "NCE_STATUS_REJECTED\020\001\022\036\n\032ACCEPTANCE_STAT" +
      "US_ACCEPTED\020\002\022\035\n\031ACCEPTANCE_STATUS_PENDI" +
      "NG\020\003*i\n\014CancelStatus\022\035\n\031CANCEL_STATUS_UN" +
      "SPECIFIED\020\000\022\036\n\032CANCEL_STATUS_NOT_CANCELE" +
      "D\020\001\022\032\n\026CANCEL_STATUS_CANCELED\020\002*\375\001\n\014Canc" +
      "elReason\022\035\n\031CANCEL_REASON_UNSPECIFIED\020\000\022" +
      " \n\034CANCEL_REASON_TICKET_TIMEOUT\020\001\022\036\n\032CAN" +
      "CEL_REASON_WRONG_TICKET\020\002\022!\n\035CANCEL_REAS" +
      "ON_TECHNICAL_ISSUE\020\003\022\"\n\036CANCEL_REASON_UN" +
      "EXPECTED_ISSUE\020\004\022\033\n\027CANCEL_REASON_REGULA" +
      "TOR\020\005\022(\n$CANCEL_REASON_FOREIGN_STAKE_REJ" +
      "ECTED\020\006*\331\001\n\025CancelRejectionReason\022$\n CAN" +
      "CEL_REJECT_REASON_UNSPECIFIED\020\000\022)\n%CANCE" +
      "L_REJECT_REASON_TICKET_NOT_FOUND\020\001\022%\n!CA" +
      "NCEL_REJECT_REASON_TIME_EXPIRED\020\002\022(\n$CAN" +
      "CEL_REJECT_REASON_ALREADY_SETTLED\020\003\022\036\n\032C" +
      "ANCEL_REJECT_REASON_OTHER\020\004*_\n\014BetStakeT" +
      "ype\022\036\n\032BET_STAKE_TYPE_UNSPECIFIED\020\000\022\026\n\022B" +
      "ET_STAKE_TYPE_SUM\020\001\022\027\n\023BET_STAKE_TYPE_UN" +
      "IT\020\002*\216\001\n\020AcceptOddsChange\022\"\n\036ACCEPT_ODDS" +
      "_CHANGE_UNSPECIFIED\020\000\022\033\n\027ACCEPT_ODDS_CHA" +
      "NGE_NONE\020\001\022\032\n\026ACCEPT_ODDS_CHANGE_ANY\020\002\022\035" +
      "\n\031ACCEPT_ODDS_CHANGE_HIGHER\020\003*\246\002\n\rTicket" +
      "Channel\022\036\n\032TICKET_CHANNEL_UNSPECIFIED\020\000\022" +
      "\033\n\027TICKET_CHANNEL_INTERNET\020\001\022\031\n\025TICKET_C" +
      "HANNEL_RETAIL\020\002\022\033\n\027TICKET_CHANNEL_TERMIN" +
      "AL\020\003\022\031\n\025TICKET_CHANNEL_MOBILE\020\004\022\030\n\024TICKE" +
      "T_CHANNEL_PHONE\020\005\022\026\n\022TICKET_CHANNEL_SMS\020" +
      "\006\022\036\n\032TICKET_CHANNEL_CALL_CENTRE\020\007\022\031\n\025TIC" +
      "KET_CHANNEL_TV_APP\020\010\022\030\n\024TICKET_CHANNEL_A" +
      "GENT\020\t*H\n\014BetBonusType\022\036\n\032BET_BONUS_TYPE" +
      "_UNSPECIFIED\020\000\022\030\n\024BET_BONUS_TYPE_TOTAL\020\001" +
      "*F\n\014BetBonusMode\022\036\n\032BET_BONUS_MODE_UNSPE" +
      "CIFIED\020\000\022\026\n\022BET_BONUS_MODE_ALL\020\001*\275\001\n\nRea" +
      "sonCode\022\033\n\027REASON_CODE_UNSPECIFIED\020\000\022 \n\034" +
      "REASON_CODE_INVALID_ARGUMENT\020\001\022\036\n\032REASON" +
      "_CODE_ALREADY_EXISTS\020\002\022\031\n\025REASON_CODE_NO" +
      "T_FOUND\020\003\022\033\n\027REASON_CODE_UNAVAILABLE\020\004\022\030" +
      "\n\024REASON_CODE_INTERNAL\020\005B\035\n\rcom.oddin.ot" +
      "sZ\014oddin.gg/otsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
