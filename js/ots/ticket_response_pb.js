// source: ots/ticket_response.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var ots_enum_enums_pb = require('../ots/enum/enums_pb.js');
goog.object.extend(proto, ots_enum_enums_pb);
goog.exportSymbol('proto.ots.AutoAcceptedOdds', null, global);
goog.exportSymbol('proto.ots.RejectedSelection', null, global);
goog.exportSymbol('proto.ots.RejectionInfo', null, global);
goog.exportSymbol('proto.ots.TicketResponse', null, global);
goog.exportSymbol('proto.ots.TicketResponseBetInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ots.TicketResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ots.TicketResponse.repeatedFields_, null);
};
goog.inherits(proto.ots.TicketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ots.TicketResponse.displayName = 'proto.ots.TicketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ots.AutoAcceptedOdds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ots.AutoAcceptedOdds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ots.AutoAcceptedOdds.displayName = 'proto.ots.AutoAcceptedOdds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ots.TicketResponseBetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ots.TicketResponseBetInfo.repeatedFields_, null);
};
goog.inherits(proto.ots.TicketResponseBetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ots.TicketResponseBetInfo.displayName = 'proto.ots.TicketResponseBetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ots.RejectedSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ots.RejectedSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ots.RejectedSelection.displayName = 'proto.ots.RejectedSelection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ots.RejectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ots.RejectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ots.RejectionInfo.displayName = 'proto.ots.RejectionInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ots.TicketResponse.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ots.TicketResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ots.TicketResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ots.TicketResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.TicketResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rejectionReason: (f = msg.getRejectionReason()) && ots_enum_enums_pb.RejectionReason.toObject(includeInstance, f),
    betInfoList: jspb.Message.toObjectList(msg.getBetInfoList(),
    proto.ots.TicketResponseBetInfo.toObject, includeInstance),
    exchangeRate: (f = msg.getExchangeRate()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    autoAcceptedOddsList: jspb.Message.toObjectList(msg.getAutoAcceptedOddsList(),
    proto.ots.AutoAcceptedOdds.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ots.TicketResponse}
 */
proto.ots.TicketResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ots.TicketResponse;
  return proto.ots.TicketResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ots.TicketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ots.TicketResponse}
 */
proto.ots.TicketResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.ots.enums.AcceptanceStatus} */ (reader.readEnum());
      msg.setTicketStatus(value);
      break;
    case 3:
      var value = new ots_enum_enums_pb.RejectionReason;
      reader.readMessage(value,ots_enum_enums_pb.RejectionReason.deserializeBinaryFromReader);
      msg.setRejectionReason(value);
      break;
    case 4:
      var value = new proto.ots.TicketResponseBetInfo;
      reader.readMessage(value,proto.ots.TicketResponseBetInfo.deserializeBinaryFromReader);
      msg.addBetInfo(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setExchangeRate(value);
      break;
    case 6:
      var value = new proto.ots.AutoAcceptedOdds;
      reader.readMessage(value,proto.ots.AutoAcceptedOdds.deserializeBinaryFromReader);
      msg.addAutoAcceptedOdds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ots.TicketResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ots.TicketResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ots.TicketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.TicketResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRejectionReason();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      ots_enum_enums_pb.RejectionReason.serializeBinaryToWriter
    );
  }
  f = message.getBetInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ots.TicketResponseBetInfo.serializeBinaryToWriter
    );
  }
  f = message.getExchangeRate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getAutoAcceptedOddsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ots.AutoAcceptedOdds.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ots.TicketResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ots.TicketResponse} returns this
 */
proto.ots.TicketResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional enums.AcceptanceStatus ticket_status = 2;
 * @return {!proto.ots.enums.AcceptanceStatus}
 */
proto.ots.TicketResponse.prototype.getTicketStatus = function() {
  return /** @type {!proto.ots.enums.AcceptanceStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ots.enums.AcceptanceStatus} value
 * @return {!proto.ots.TicketResponse} returns this
 */
proto.ots.TicketResponse.prototype.setTicketStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional enums.RejectionReason rejection_reason = 3;
 * @return {?proto.ots.enums.RejectionReason}
 */
proto.ots.TicketResponse.prototype.getRejectionReason = function() {
  return /** @type{?proto.ots.enums.RejectionReason} */ (
    jspb.Message.getWrapperField(this, ots_enum_enums_pb.RejectionReason, 3));
};


/**
 * @param {?proto.ots.enums.RejectionReason|undefined} value
 * @return {!proto.ots.TicketResponse} returns this
*/
proto.ots.TicketResponse.prototype.setRejectionReason = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ots.TicketResponse} returns this
 */
proto.ots.TicketResponse.prototype.clearRejectionReason = function() {
  return this.setRejectionReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ots.TicketResponse.prototype.hasRejectionReason = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated TicketResponseBetInfo bet_info = 4;
 * @return {!Array<!proto.ots.TicketResponseBetInfo>}
 */
proto.ots.TicketResponse.prototype.getBetInfoList = function() {
  return /** @type{!Array<!proto.ots.TicketResponseBetInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ots.TicketResponseBetInfo, 4));
};


/**
 * @param {!Array<!proto.ots.TicketResponseBetInfo>} value
 * @return {!proto.ots.TicketResponse} returns this
*/
proto.ots.TicketResponse.prototype.setBetInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ots.TicketResponseBetInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ots.TicketResponseBetInfo}
 */
proto.ots.TicketResponse.prototype.addBetInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ots.TicketResponseBetInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ots.TicketResponse} returns this
 */
proto.ots.TicketResponse.prototype.clearBetInfoList = function() {
  return this.setBetInfoList([]);
};


/**
 * optional google.protobuf.UInt64Value exchange_rate = 5;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.ots.TicketResponse.prototype.getExchangeRate = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 5));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.ots.TicketResponse} returns this
*/
proto.ots.TicketResponse.prototype.setExchangeRate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ots.TicketResponse} returns this
 */
proto.ots.TicketResponse.prototype.clearExchangeRate = function() {
  return this.setExchangeRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ots.TicketResponse.prototype.hasExchangeRate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated AutoAcceptedOdds auto_accepted_odds = 6;
 * @return {!Array<!proto.ots.AutoAcceptedOdds>}
 */
proto.ots.TicketResponse.prototype.getAutoAcceptedOddsList = function() {
  return /** @type{!Array<!proto.ots.AutoAcceptedOdds>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ots.AutoAcceptedOdds, 6));
};


/**
 * @param {!Array<!proto.ots.AutoAcceptedOdds>} value
 * @return {!proto.ots.TicketResponse} returns this
*/
proto.ots.TicketResponse.prototype.setAutoAcceptedOddsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ots.AutoAcceptedOdds=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ots.AutoAcceptedOdds}
 */
proto.ots.TicketResponse.prototype.addAutoAcceptedOdds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ots.AutoAcceptedOdds, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ots.TicketResponse} returns this
 */
proto.ots.TicketResponse.prototype.clearAutoAcceptedOddsList = function() {
  return this.setAutoAcceptedOddsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ots.AutoAcceptedOdds.prototype.toObject = function(opt_includeInstance) {
  return proto.ots.AutoAcceptedOdds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ots.AutoAcceptedOdds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.AutoAcceptedOdds.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestedOdds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    usedOdds: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ots.AutoAcceptedOdds}
 */
proto.ots.AutoAcceptedOdds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ots.AutoAcceptedOdds;
  return proto.ots.AutoAcceptedOdds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ots.AutoAcceptedOdds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ots.AutoAcceptedOdds}
 */
proto.ots.AutoAcceptedOdds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestedOdds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsedOdds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ots.AutoAcceptedOdds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ots.AutoAcceptedOdds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ots.AutoAcceptedOdds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.AutoAcceptedOdds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestedOdds();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUsedOdds();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string selection_id = 1;
 * @return {string}
 */
proto.ots.AutoAcceptedOdds.prototype.getSelectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ots.AutoAcceptedOdds} returns this
 */
proto.ots.AutoAcceptedOdds.prototype.setSelectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 requested_odds = 2;
 * @return {number}
 */
proto.ots.AutoAcceptedOdds.prototype.getRequestedOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ots.AutoAcceptedOdds} returns this
 */
proto.ots.AutoAcceptedOdds.prototype.setRequestedOdds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 used_odds = 3;
 * @return {number}
 */
proto.ots.AutoAcceptedOdds.prototype.getUsedOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ots.AutoAcceptedOdds} returns this
 */
proto.ots.AutoAcceptedOdds.prototype.setUsedOdds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ots.TicketResponseBetInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ots.TicketResponseBetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ots.TicketResponseBetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ots.TicketResponseBetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.TicketResponseBetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rejectionReason: (f = msg.getRejectionReason()) && ots_enum_enums_pb.RejectionReason.toObject(includeInstance, f),
    selectionInfoList: jspb.Message.toObjectList(msg.getSelectionInfoList(),
    proto.ots.RejectedSelection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ots.TicketResponseBetInfo}
 */
proto.ots.TicketResponseBetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ots.TicketResponseBetInfo;
  return proto.ots.TicketResponseBetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ots.TicketResponseBetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ots.TicketResponseBetInfo}
 */
proto.ots.TicketResponseBetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new ots_enum_enums_pb.RejectionReason;
      reader.readMessage(value,ots_enum_enums_pb.RejectionReason.deserializeBinaryFromReader);
      msg.setRejectionReason(value);
      break;
    case 3:
      var value = new proto.ots.RejectedSelection;
      reader.readMessage(value,proto.ots.RejectedSelection.deserializeBinaryFromReader);
      msg.addSelectionInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ots.TicketResponseBetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ots.TicketResponseBetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ots.TicketResponseBetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.TicketResponseBetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRejectionReason();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ots_enum_enums_pb.RejectionReason.serializeBinaryToWriter
    );
  }
  f = message.getSelectionInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ots.RejectedSelection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ots.TicketResponseBetInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ots.TicketResponseBetInfo} returns this
 */
proto.ots.TicketResponseBetInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional enums.RejectionReason rejection_reason = 2;
 * @return {?proto.ots.enums.RejectionReason}
 */
proto.ots.TicketResponseBetInfo.prototype.getRejectionReason = function() {
  return /** @type{?proto.ots.enums.RejectionReason} */ (
    jspb.Message.getWrapperField(this, ots_enum_enums_pb.RejectionReason, 2));
};


/**
 * @param {?proto.ots.enums.RejectionReason|undefined} value
 * @return {!proto.ots.TicketResponseBetInfo} returns this
*/
proto.ots.TicketResponseBetInfo.prototype.setRejectionReason = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ots.TicketResponseBetInfo} returns this
 */
proto.ots.TicketResponseBetInfo.prototype.clearRejectionReason = function() {
  return this.setRejectionReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ots.TicketResponseBetInfo.prototype.hasRejectionReason = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated RejectedSelection selection_info = 3;
 * @return {!Array<!proto.ots.RejectedSelection>}
 */
proto.ots.TicketResponseBetInfo.prototype.getSelectionInfoList = function() {
  return /** @type{!Array<!proto.ots.RejectedSelection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ots.RejectedSelection, 3));
};


/**
 * @param {!Array<!proto.ots.RejectedSelection>} value
 * @return {!proto.ots.TicketResponseBetInfo} returns this
*/
proto.ots.TicketResponseBetInfo.prototype.setSelectionInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ots.RejectedSelection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ots.RejectedSelection}
 */
proto.ots.TicketResponseBetInfo.prototype.addSelectionInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ots.RejectedSelection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ots.TicketResponseBetInfo} returns this
 */
proto.ots.TicketResponseBetInfo.prototype.clearSelectionInfoList = function() {
  return this.setSelectionInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ots.RejectedSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.ots.RejectedSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ots.RejectedSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.RejectedSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rejectionReason: (f = msg.getRejectionReason()) && ots_enum_enums_pb.RejectionReason.toObject(includeInstance, f),
    rejectionInfo: (f = msg.getRejectionInfo()) && proto.ots.RejectionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ots.RejectedSelection}
 */
proto.ots.RejectedSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ots.RejectedSelection;
  return proto.ots.RejectedSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ots.RejectedSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ots.RejectedSelection}
 */
proto.ots.RejectedSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new ots_enum_enums_pb.RejectionReason;
      reader.readMessage(value,ots_enum_enums_pb.RejectionReason.deserializeBinaryFromReader);
      msg.setRejectionReason(value);
      break;
    case 3:
      var value = new proto.ots.RejectionInfo;
      reader.readMessage(value,proto.ots.RejectionInfo.deserializeBinaryFromReader);
      msg.setRejectionInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ots.RejectedSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ots.RejectedSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ots.RejectedSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.RejectedSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRejectionReason();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ots_enum_enums_pb.RejectionReason.serializeBinaryToWriter
    );
  }
  f = message.getRejectionInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ots.RejectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ots.RejectedSelection.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ots.RejectedSelection} returns this
 */
proto.ots.RejectedSelection.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional enums.RejectionReason rejection_reason = 2;
 * @return {?proto.ots.enums.RejectionReason}
 */
proto.ots.RejectedSelection.prototype.getRejectionReason = function() {
  return /** @type{?proto.ots.enums.RejectionReason} */ (
    jspb.Message.getWrapperField(this, ots_enum_enums_pb.RejectionReason, 2));
};


/**
 * @param {?proto.ots.enums.RejectionReason|undefined} value
 * @return {!proto.ots.RejectedSelection} returns this
*/
proto.ots.RejectedSelection.prototype.setRejectionReason = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ots.RejectedSelection} returns this
 */
proto.ots.RejectedSelection.prototype.clearRejectionReason = function() {
  return this.setRejectionReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ots.RejectedSelection.prototype.hasRejectionReason = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RejectionInfo rejection_info = 3;
 * @return {?proto.ots.RejectionInfo}
 */
proto.ots.RejectedSelection.prototype.getRejectionInfo = function() {
  return /** @type{?proto.ots.RejectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.ots.RejectionInfo, 3));
};


/**
 * @param {?proto.ots.RejectionInfo|undefined} value
 * @return {!proto.ots.RejectedSelection} returns this
*/
proto.ots.RejectedSelection.prototype.setRejectionInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ots.RejectedSelection} returns this
 */
proto.ots.RejectedSelection.prototype.clearRejectionInfo = function() {
  return this.setRejectionInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ots.RejectedSelection.prototype.hasRejectionInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ots.RejectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ots.RejectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ots.RejectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.RejectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    odds: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ots.RejectionInfo}
 */
proto.ots.RejectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ots.RejectionInfo;
  return proto.ots.RejectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ots.RejectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ots.RejectionInfo}
 */
proto.ots.RejectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOdds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ots.RejectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ots.RejectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ots.RejectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ots.RejectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOdds();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string eventId = 1;
 * @return {string}
 */
proto.ots.RejectionInfo.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ots.RejectionInfo} returns this
 */
proto.ots.RejectionInfo.prototype.setEventid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.ots.RejectionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ots.RejectionInfo} returns this
 */
proto.ots.RejectionInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 odds = 3;
 * @return {number}
 */
proto.ots.RejectionInfo.prototype.getOdds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ots.RejectionInfo} returns this
 */
proto.ots.RejectionInfo.prototype.setOdds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.ots);
